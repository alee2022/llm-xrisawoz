[
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello! I'm from out-of-town and here to visit Suzhou. Can you recommend a fun place? <endofhistory>",
    "output": "null",
    "prediction": "The type \"fun place\" does not match any of the normalized values listed for the domain \"attraction\". The closest normalized value would depend on the specific nature of the \"fun place\". If it is an amusement park, the normalized value would be \"amusement park\". If it is a general term used for a place that is enjoyable and does not fit any specific category, the belief state should not be changed without further context. Please provide more details or choose from the available normalized types: \"Suzhou-style garden\", \"landscape scenic spot\", \"amusement park\", \"water town\", \"historic site in Gusu District\", \"commercial center\", \"campus\", \"garden\"."
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> AGENT_ACTS: ( attraction ) greeting , request area USER: Kunshan. A good place to travel with friends, it's OK if it's a bit more expensive. <endofhistory>",
    "output": "( attraction ) area equal_to \" Kunshan \" , the_most_suitable_people equal_to \" travel with friends \"",
    "prediction": "( attraction ) area equal_to \" Kunshan \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Kunshan \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: null AGENT_ACTS: ( attraction ) recommend name equal_to \" Zhouzhuang Town \" USER: What's special about it? <endofhistory>",
    "output": "( attraction ) area equal_to \" Kunshan \" , name equal_to \" Zhouzhuang Town \" , the_most_suitable_people equal_to \" travel with friends \"",
    "prediction": "( attraction ) area equal_to \" Kunshan \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Kunshan \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Zhouzhuang Town \" AGENT_ACTS: ( attraction ) inform features equal_to \" Zhouzhuang Town is famous for its many small bridges, winding waterways, the Twin Bridges, traditional Chinese riverboats, and the historical figure Shen Wansan. \" USER: That's great. What's the address? <endofhistory>",
    "output": "( attraction ) area equal_to \" Kunshan \" , name equal_to \" Zhouzhuang Town \" , the_most_suitable_people equal_to \" travel with friends \"",
    "prediction": "( attraction ) area equal_to \" Kunshan \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Kunshan \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform features equal_to \" Zhouzhuang Town is famous for its many small bridges, winding waterways, the Twin Bridges, traditional Chinese riverboats, and the historical figure Shen Wansan. \" AGENT_ACTS: ( attraction ) inform address equal_to \" No. 43, Quanfu Road, Zhouzhuang Town, Kunshan City, Suzhou City \" USER: Can I get there directly by subway? <endofhistory>",
    "output": "( attraction ) area equal_to \" Kunshan \" , name equal_to \" Zhouzhuang Town \" , the_most_suitable_people equal_to \" travel with friends \"",
    "prediction": "( attraction ) area equal_to \" Kunshan \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Kunshan \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" No. 43, Quanfu Road, Zhouzhuang Town, Kunshan City, Suzhou City \" AGENT_ACTS: ( attraction ) inform metro_station equal_to \" false \" USER: Well, thanks for your recommendation. Goodbye! <endofhistory>",
    "output": "( attraction ) area equal_to \" Kunshan \" , name equal_to \" Zhouzhuang Town \" , the_most_suitable_people equal_to \" travel with friends \"",
    "prediction": "( attraction ) area equal_to \" Kunshan \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm coming to Suzhou with my friends on business, and I'd like to visit Jinji Lake Scenic Area. Can you tell me more about what's special about it? <endofhistory>",
    "output": "( attraction ) name equal_to \" Jinji Lake Scenic Area \" , opening_hours equal_to \" all day \"",
    "prediction": "( attraction ) name equal_to \" Jinji Lake Scenic Area \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Jinji Lake Scenic Area \" <endofstate> <history> AGENT_ACTS: ( attraction ) inform features equal_to \" At Jinji Lake Scenic Area, you can enjoy a view of iconic tall buildings like the Gate of the Orient, ride the Ferris wheel for a panoramic view, take a night cruise to experience the modern atmosphere of Suzhou, and it's a great place for dating. \" USER: It sounds beautiful. I can't wait to go there. <endofhistory>",
    "output": "( attraction ) name equal_to \" Jinji Lake Scenic Area \" , opening_hours equal_to \" all day \"",
    "prediction": "( attraction ) name equal_to \" Jinji Lake Scenic Area \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Jinji Lake Scenic Area \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform features equal_to \" At Jinji Lake Scenic Area, you can enjoy a view of iconic tall buildings like the Gate of the Orient, ride the Ferris wheel for a panoramic view, take a night cruise to experience the modern atmosphere of Suzhou, and it's a great place for dating. \" AGENT_ACTS: ( general ) confirm_completion USER: What's the phone number? I want to call to book tickets. <endofhistory>",
    "output": "( attraction ) name equal_to \" Jinji Lake Scenic Area \" , opening_hours equal_to \" all day \"",
    "prediction": "( attraction ) name equal_to \" Jinji Lake Scenic Area \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Jinji Lake Scenic Area \" <endofstate> <history> AGENT_ACTS_PREV: ( general ) confirm_completion AGENT_ACTS: ( attraction ) inform phone_number equal_to \" 400-7558558 \" USER: OK. What are the opening hours of the attraction? <endofhistory>",
    "output": "( attraction ) name equal_to \" Jinji Lake Scenic Area \" , opening_hours equal_to \" all day \"",
    "prediction": "( attraction ) name equal_to \" Jinji Lake Scenic Area \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Jinji Lake Scenic Area \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform phone_number equal_to \" 400-7558558 \" AGENT_ACTS: ( attraction ) inform opening_hours equal_to \" all day \" USER: Open all day, great. Then I can go anytime. That's convenient. <endofhistory>",
    "output": "( attraction ) name equal_to \" Jinji Lake Scenic Area \" , opening_hours equal_to \" all day \"",
    "prediction": "( attraction ) name equal_to \" Jinji Lake Scenic Area \" , opening_hours equal_to \" all day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Jinji Lake Scenic Area \" , opening_hours equal_to \" all day \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform opening_hours equal_to \" all day \" AGENT_ACTS: ( general ) acknowledge USER: No, thanks. Goodbye. <endofhistory>",
    "output": "( attraction ) name equal_to \" Jinji Lake Scenic Area \" , opening_hours equal_to \" all day \"",
    "prediction": "( attraction ) name equal_to \" Jinji Lake Scenic Area \" , opening_hours equal_to \" all day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm coming to Suzhou with my friends on business, and I'd like to visit Lingyan Mountain Scenic Area. Can you help me find the address of this place? <endofhistory>",
    "output": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" , score equal_to \" 4.3 \" , ticket_price equal_to \" free \"",
    "prediction": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" <endofstate> <history> AGENT_ACTS: ( attraction ) inform address equal_to \" at the end of Shantang Street, Mudu Ancient Town, Wuzhong District, Suzhou City \" USER: What's its rating? <endofhistory>",
    "output": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" , score equal_to \" 4.3 \" , ticket_price equal_to \" free \"",
    "prediction": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" at the end of Shantang Street, Mudu Ancient Town, Wuzhong District, Suzhou City \" AGENT_ACTS: ( attraction ) inform score equal_to \" 4.3 \" USER: 4.3, that's a bit low, haha. <endofhistory>",
    "output": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" , score equal_to \" 4.3 \" , ticket_price equal_to \" free \"",
    "prediction": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform score equal_to \" 4.3 \" AGENT_ACTS: ( attraction ) inform features equal_to \" It is a good place to climb the mountain, overlook the scenery of Suzhou City, worship Buddha, and pray for blessings in Lingyan Mountain Temple. \" USER: You're right. I'll go try it. Could you tell me the price of the ticket? <endofhistory>",
    "output": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" , score equal_to \" 4.3 \" , ticket_price equal_to \" free \"",
    "prediction": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform features equal_to \" It is a good place to climb the mountain, overlook the scenery of Suzhou City, worship Buddha, and pray for blessings in Lingyan Mountain Temple. \" AGENT_ACTS: ( attraction ) inform ticket_price equal_to \" free \" USER: Awesome. I'm even happier now that I know it's free. <endofhistory>",
    "output": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" , score equal_to \" 4.3 \" , ticket_price equal_to \" free \"",
    "prediction": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" , ticket_price equal_to \" free \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" , ticket_price equal_to \" free \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform ticket_price equal_to \" free \" AGENT_ACTS: ( general ) acknowledge USER: No, thank you and bye. <endofhistory>",
    "output": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" , score equal_to \" 4.3 \" , the_most_suitable_people equal_to \" friends \" , ticket_price equal_to \" free \"",
    "prediction": "( attraction ) name equal_to \" Lingyan Mountain Scenic Area \" , ticket_price equal_to \" free \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I live in Suzhou, but I don't go out much. My friend is coming to Suzhou to visit me and I'm thinking about taking him to a university campus. Do you have any recommendations? <endofhistory>",
    "output": "( attraction ) the_most_suitable_people equal_to \" friend \" , type equal_to \" campus \"",
    "prediction": "( attraction ) type equal_to \" campus \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" campus \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Soochow University \" USER: I'd like a cheap one. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" cheap \" , the_most_suitable_people equal_to \" friend \" , type equal_to \" campus \"",
    "prediction": "( attraction ) type equal_to \" campus \", consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" campus \", consumption equal_to \" cheap \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Soochow University \" AGENT_ACTS: ( attraction ) inform ticket_price equal_to \" free \" USER: OK, is there a subway station near the university? I want to go there by subway. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" cheap \" , name equal_to \" Soochow University \" , the_most_suitable_people equal_to \" friend \" , type equal_to \" campus \"",
    "prediction": "( attraction ) type equal_to \" campus \", consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" campus \", consumption equal_to \" cheap \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform ticket_price equal_to \" free \" AGENT_ACTS: ( attraction ) inform metro_station equal_to \" true \" USER: That's great. What are the opening hours of the university? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" cheap \" , name equal_to \" Soochow University \" , the_most_suitable_people equal_to \" friend \" , type equal_to \" campus \"",
    "prediction": "( attraction ) type equal_to \" campus \", consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" campus \", consumption equal_to \" cheap \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform metro_station equal_to \" true \" AGENT_ACTS: ( attraction ) inform opening_hours equal_to \" all day \" USER: That's good, that makes fitting it in easier. What's special about the university? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" cheap \" , name equal_to \" Soochow University \" , the_most_suitable_people equal_to \" friend \" , type equal_to \" campus \"",
    "prediction": "( attraction ) type equal_to \" campus \", consumption equal_to \" cheap \", opening_hours equal_to \" all day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" campus \", consumption equal_to \" cheap \", opening_hours equal_to \" all day \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform opening_hours equal_to \" all day \" AGENT_ACTS: ( attraction ) inform features equal_to \" Soochow University, part of the national '211 Project', has a rich history with its predecessor founded in 1900. Located in the old town of Suzhou, it's a scenic campus known for its educational excellence and beautiful traditional architecture. \" USER: I see. Thank you so much for your patience. Bye. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" cheap \" , name equal_to \" Soochow University \" , the_most_suitable_people equal_to \" friend \" , type equal_to \" campus \"",
    "prediction": "( attraction ) type equal_to \" campus \", consumption equal_to \" cheap \", opening_hours equal_to \" all day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm traveling in Suzhou and I'm now in Wuzhong District. Can you recommend to me some interesting attractions? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Tianping Mountain Scenic Area \" USER: I'm going with a few friends. Please help me find a suitable attraction. I don't want the price to be too high, something mid-priced is fine. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , the_most_suitable_people equal_to \" friends \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Tianping Mountain Scenic Area \" AGENT_ACTS: ( attraction ) inform name equal_to \" Tianping Mountain Scenic Area \" , ticket_price equal_to \" 30 yuan \" USER: Well, I heard from my friends that Tianping Mountain Scenic Area is good. How much is a ticket? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , name equal_to \" Tianping Mountain Scenic Area \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Tianping Mountain Scenic Area \" , ticket_price equal_to \" 30 yuan \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Tianping Mountain Scenic Area \" , ticket_price equal_to \" 30 yuan \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform name equal_to \" Tianping Mountain Scenic Area \" , ticket_price equal_to \" 30 yuan \" AGENT_ACTS: ( attraction ) inform ticket_price equal_to \" 30 yuan \" USER: Yes, the price is acceptable. What's the address of the attraction? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , name equal_to \" Tianping Mountain Scenic Area \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Tianping Mountain Scenic Area \" , ticket_price equal_to \" 30 yuan \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Tianping Mountain Scenic Area \" , ticket_price equal_to \" 30 yuan \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform ticket_price equal_to \" 30 yuan \" AGENT_ACTS: ( attraction ) inform address equal_to \" Lingtian Road, Wuzhong District, Suzhou City \" USER: OK. What's the phone number of the attraction? I want to call to ask some questions before I go. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , name equal_to \" Tianping Mountain Scenic Area \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Tianping Mountain Scenic Area \" , ticket_price equal_to \" 30 yuan \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Tianping Mountain Scenic Area \" , ticket_price equal_to \" 30 yuan \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" Lingtian Road, Wuzhong District, Suzhou City \" AGENT_ACTS: ( attraction ) inform phone_number equal_to \" 0512-66387422 \" USER: OK, got it. Thanks for your patience. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , name equal_to \" Tianping Mountain Scenic Area \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Tianping Mountain Scenic Area \" , ticket_price equal_to \" 30 yuan \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm from out-of-town and I'm here visiting Suzhou. Can you recommend a place I could go with friends in Wujiang District? Something in the higher price range. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wujiang \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Wujiang District \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wujiang District \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Tongli Town \" USER: OK, what's its rating? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wujiang \" , name equal_to \" Tongli Ancient Town \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Wujiang District \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wujiang District \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Tongli Town \" AGENT_ACTS: ( attraction ) inform score equal_to \" 4.5 \" USER: Good, how much is the ticket? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wujiang \" , name equal_to \" Tongli Ancient Town \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Wujiang District \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wujiang District \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform score equal_to \" 4.5 \" AGENT_ACTS: ( attraction ) inform ticket_price equal_to \" 100 yuan \" USER: Can I get there by subway? That would be more convenient. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wujiang \" , name equal_to \" Tongli Ancient Town \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Wujiang District \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wujiang District \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform ticket_price equal_to \" 100 yuan \" AGENT_ACTS: ( attraction ) inform metro_station equal_to \" false \" USER: Well, I see. Thanks, bye. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wujiang \" , name equal_to \" Tongli Ancient Town \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Wujiang District \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I want to visit a landscape scenic spot in Suzhou with my friends. Can you recommend a mid-priced attraction? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Tianping Mountain Scenic Area \" USER: How much is the ticket? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Tianping Mountain Scenic Area \" , the_most_suitable_people equal_to \" friends \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Tianping Mountain Scenic Area \" AGENT_ACTS: ( attraction ) inform ticket_price equal_to \" 30 yuan \" USER: What's special about this attraction? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Tianping Mountain Scenic Area \" , the_most_suitable_people equal_to \" friends \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform ticket_price equal_to \" 30 yuan \" AGENT_ACTS: ( attraction ) inform features equal_to \" It's the burial place of the ancestors of Fan Zhongyan and offers rocky road climbing. In mid-to-late November, visitors can enjoy the sight of beautiful red maple trees. \" USER: And last of all, what is the phone number of the attraction? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Tianping Mountain Scenic Area \" , the_most_suitable_people equal_to \" friends \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform features equal_to \" It's the burial place of the ancestors of Fan Zhongyan and offers rocky road climbing. In mid-to-late November, visitors can enjoy the sight of beautiful red maple trees. \" AGENT_ACTS: ( attraction ) inform phone_number equal_to \" 0512-66387422 \" USER: Got it. Thanks, bye. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Tianping Mountain Scenic Area \" , the_most_suitable_people equal_to \" friends \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , the_most_suitable_people equal_to \" friends \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hi, I'm in Suzhou on business with my besties. We want to visit Taihu Lake Wetland Park on the weekend. Could you please give me its address? <endofhistory>",
    "output": "( attraction ) name equal_to \" Taihu Lake Wetland Park \"",
    "prediction": "( attraction ) name equal_to \" Taihu Lake Wetland Park \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Taihu Lake Wetland Park \" <endofstate> <history> AGENT_ACTS: ( attraction ) inform address equal_to \" No. 1, Town Lake Embroidery Street, Suzhou New District, Suzhou City \" USER: What are the opening hours? <endofhistory>",
    "output": "( attraction ) name equal_to \" Taihu Lake Wetland Park \"",
    "prediction": "( attraction ) name equal_to \" Taihu Lake Wetland Park \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Taihu Lake Wetland Park \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" No. 1, Town Lake Embroidery Street, Suzhou New District, Suzhou City \" AGENT_ACTS: ( attraction ) inform opening_hours equal_to \" 09:00-16:30 \" USER: I see. And could you tell me its phone number? <endofhistory>",
    "output": "( attraction ) name equal_to \" Taihu Lake Wetland Park \"",
    "prediction": "( attraction ) name equal_to \" Taihu Lake Wetland Park \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Taihu Lake Wetland Park \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform opening_hours equal_to \" 09:00-16:30 \" AGENT_ACTS: ( attraction ) inform phone_number equal_to \" 0512-66918088 \" USER: OK, got it. Thank you. <endofhistory>",
    "output": "( attraction ) name equal_to \" Taihu Lake Wetland Park \" , the_most_suitable_people equal_to \" besties \"",
    "prediction": "( attraction ) name equal_to \" Taihu Lake Wetland Park \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Taihu Lake Wetland Park \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform phone_number equal_to \" 0512-66918088 \" AGENT_ACTS: ( general ) you_are_welcome USER: No, that's all. Goodbye. <endofhistory>",
    "output": "( attraction ) name equal_to \" Taihu Lake Wetland Park \" , the_most_suitable_people equal_to \" besties \"",
    "prediction": "( attraction ) name equal_to \" Taihu Lake Wetland Park \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm traveling to Suzhou with my girlfriend and we want to visit Wuzhong District first. Could you recommend a landscape scenic spot with a subway station nearby? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , metro_station equal_to \" with a subway station nearby \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Stone Lake \" USER: Great, could you tell me the address? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , metro_station equal_to \" with a subway station nearby \" , name equal_to \" Stone Lake \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \" , name equal_to \" Stone Lake \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \" , name equal_to \" Stone Lake \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Stone Lake \" AGENT_ACTS: ( attraction ) inform address equal_to \" No. 333, Youxin Road, Wuzhong District, Suzhou City. \" USER: OK, what's the phone number for the attraction? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , metro_station equal_to \" with a subway station nearby \" , name equal_to \" Stone Lake \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \" , name equal_to \" Stone Lake \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \" , name equal_to \" Stone Lake \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" No. 333, Youxin Road, Wuzhong District, Suzhou City. \" AGENT_ACTS: ( attraction ) inform phone_number equal_to \" 0512-65646668 \" USER: We also want to know what's special about the attraction. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , metro_station equal_to \" with a subway station nearby \" , name equal_to \" Stone Lake \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \" , name equal_to \" Stone Lake \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \" , name equal_to \" Stone Lake \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform phone_number equal_to \" 0512-65646668 \" AGENT_ACTS: ( attraction ) inform features equal_to \" Stone Lake is famous for its wonderful scenery, endless rows of mountains and ridges, and is a great place to appreciate the mountain and water culture of Suzhou. \" USER: Got it. I can't wait to go and enjoy the natural scenery. Thank you. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , metro_station equal_to \" with a subway station nearby \" , name equal_to \" Stone Lake \" , the_most_suitable_people equal_to \" girlfriend \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \" , name equal_to \" Stone Lake \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \" , name equal_to \" Stone Lake \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform features equal_to \" Stone Lake is famous for its wonderful scenery, endless rows of mountains and ridges, and is a great place to appreciate the mountain and water culture of Suzhou. \" AGENT_ACTS: ( general ) you_are_welcome USER: Thank you, goodbye! <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , metro_station equal_to \" with a subway station nearby \" , name equal_to \" Stone Lake \" , the_most_suitable_people equal_to \" girlfriend \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , type equal_to \" landscape scenic spot \" , metro_station equal_to \" true \" , name equal_to \" Stone Lake \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm visiting Suzhou from out of town. Could you recommend a family-friendly place in Wuzhong District? I'd prefer a mid-priced one. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , the_most_suitable_people equal_to \" family-friendly \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Dongting Dongshan \" USER: Can I get there directly by subway? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , name equal_to \" Dongting Dongshan \" , the_most_suitable_people equal_to \" family-friendly \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Dongting Dongshan \" AGENT_ACTS: ( attraction ) inform metro_station equal_to \" false \" USER: What's the phone number? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , name equal_to \" Dongting Dongshan \" , the_most_suitable_people equal_to \" family-friendly \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform metro_station equal_to \" false \" AGENT_ACTS: ( attraction ) inform phone_number equal_to \" 0512-66399231 \" USER: And where exactly is it? <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , name equal_to \" Dongting Dongshan \" , the_most_suitable_people equal_to \" family-friendly \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform phone_number equal_to \" 0512-66399231 \" AGENT_ACTS: ( attraction ) inform address equal_to \" Near Moli Road, Wuzhong District, Suzhou City \" USER: Thank you. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , name equal_to \" Dongting Dongshan \" , the_most_suitable_people equal_to \" family-friendly \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" Near Moli Road, Wuzhong District, Suzhou City \" AGENT_ACTS: ( general ) you_are_welcome USER: Goodbye. <endofhistory>",
    "output": "( attraction ) area equal_to \" Wuzhong District \" , consumption equal_to \" mid \" , name equal_to \" Dongting Dongshan \" , the_most_suitable_people equal_to \" family-friendly \"",
    "prediction": "( attraction ) area equal_to \" Wuzhong District \" , the_most_suitable_people equal_to \" family-friendly \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello! I don't like going out very much, but my friend is coming to Suzhou to visit me. Could you recommend an amusement park? <endofhistory>",
    "output": "( attraction ) type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Suzhou Amusement Land Forest and Water World \" USER: Something in the mid-price range. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Suzhou Amusement Land Forest and Water World \" AGENT_ACTS: ( attraction ) recommend name equal_to \" Suzhou Aquarium \" USER: Could you tell me the phone number for the attraction? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Suzhou Aquarium \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Suzhou Aquarium \" AGENT_ACTS: ( attraction ) inform phone_number equal_to \" 0512-69381000 \" USER: What about the opening hours? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Suzhou Aquarium \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform phone_number equal_to \" 0512-69381000 \" AGENT_ACTS: ( attraction ) inform opening_hours equal_to \" 09:00-17:00 \" USER: What's special about it? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Suzhou Aquarium \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform opening_hours equal_to \" 09:00-17:00 \" AGENT_ACTS: ( attraction ) inform features equal_to \" enjoy a variety of marine creatures, watch wonderful animal performances, and experience the colorful ocean world \" USER: Well, that's great. Thanks! Goodbye! <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Suzhou Aquarium \" , the_most_suitable_people equal_to \" friend \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, can you recommend a cheaper place in Gusu District where I could go with friends? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheaper \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheap \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheap \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Suzhou Museum \" USER: What are the opening hours? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheaper \" , name equal_to \" the Suzhou Museum \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheap \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheap \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Suzhou Museum \" AGENT_ACTS: ( attraction ) inform opening_hours equal_to \" 09:00-17:00 \" USER: Can I get there by subway? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheaper \" , name equal_to \" the Suzhou Museum \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheap \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheap \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform opening_hours equal_to \" 09:00-17:00 \" AGENT_ACTS: ( attraction ) inform metro_station equal_to \" false \" USER: How much is the ticket? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheaper \" , name equal_to \" the Suzhou Museum \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheap \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheap \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform metro_station equal_to \" false \" AGENT_ACTS: ( attraction ) inform ticket_price equal_to \" free \" USER: Thank you so much for your help, bye! <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheaper \" , name equal_to \" the Suzhou Museum \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , consumption equal_to \" cheap \" , the_most_suitable_people equal_to \" friends \" , ticket_price equal_to \" free \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, my girlfriend and I are going to visit some popular commercial centers in Gusu District on the weekend. Do you have any recommendations? We want to take the subway there. <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" girlfriend \" , type equal_to \" commercial center \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Shilu Pedestrian Street \" USER: Got it. No tickets needed, right? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , name equal_to \" Shilu Pedestrian Street \" , the_most_suitable_people equal_to \" girlfriend \" , type equal_to \" commercial center \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \" , ticket_price equal_to \" free \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \" , ticket_price equal_to \" free \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Shilu Pedestrian Street \" AGENT_ACTS: ( attraction ) confirm ticket_price equal_to \" free \" USER: Haha, could you please tell me the address? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , name equal_to \" Shilu Pedestrian Street \" , the_most_suitable_people equal_to \" girlfriend \" , type equal_to \" commercial center \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \" , ticket_price equal_to \" free \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \" , ticket_price equal_to \" free \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) confirm ticket_price equal_to \" free \" AGENT_ACTS: ( attraction ) inform address equal_to \" Shilu Pedestrian Street, Jinchang District, Suzhou City \" USER: And could you please help to double-check if there is a subway station nearby? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , metro_station equal_to \" there is \" , name equal_to \" Shilu Pedestrian Street \" , the_most_suitable_people equal_to \" girlfriend \" , type equal_to \" commercial center \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \" , ticket_price equal_to \" free \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \" , ticket_price equal_to \" free \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" Shilu Pedestrian Street, Jinchang District, Suzhou City \" AGENT_ACTS: ( attraction ) inform metro_station equal_to \" true \" USER: Good, then we can get there by subway from the railway station. <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , metro_station equal_to \" there is \" , name equal_to \" Shilu Pedestrian Street \" , the_most_suitable_people equal_to \" girlfriend \" , type equal_to \" commercial center \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \" , ticket_price equal_to \" free \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \" , ticket_price equal_to \" free \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform metro_station equal_to \" true \" AGENT_ACTS: ( attraction ) confirm name equal_to \" Shilu Pedestrian Street \" USER: No, thank you. Bye. <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , metro_station equal_to \" there is \" , name equal_to \" Shilu Pedestrian Street \" , the_most_suitable_people equal_to \" girlfriend \" , type equal_to \" commercial center \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , type equal_to \" commercial center \" , metro_station equal_to \" true \" , ticket_price equal_to \" free \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I live in Suzhou, but I don't go out much. My friend is coming to Suzhou to visit me and I'm thinking about taking him to landscape scenic spots. Do you have any recommendations? <endofhistory>",
    "output": "( attraction ) type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Jinji Lake Scenic Area \" USER: Oh, I'd like to go somewhere slightly more expensive. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Jinji Lake Scenic Area \" buildings like the Gate of the Orient, ride the Ferris wheel, take a night cruise, and feel the modern side of Suzhou \" AGENT_ACTS: ( attraction ) recommend name equal_to \" Jinji Lake Scenic Area \" buildings like the Gate of the Orient, ride the Ferris wheel, take a night cruise, and feel the modern side of Suzhou \" USER: What's its rating? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Jinji Lake Scenic Area \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform features equal_to \" get a good view of tall buildings like the Gate of the Orient, ride the Ferris wheel, take a night cruise, and feel the modern side of Suzhou \" AGENT_ACTS: ( attraction ) inform score equal_to \" 4.5 \" USER: Can I get there by subway? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Jinji Lake Scenic Area \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform score equal_to \" 4.5 \" AGENT_ACTS: ( attraction ) inform metro_station equal_to \" true \" USER: What's the phone number for the attraction? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Jinji Lake Scenic Area \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform metro_station equal_to \" true \" AGENT_ACTS: ( attraction ) inform phone_number equal_to \" 400-7558558 \" USER: Thank you so much for your help, bye! <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Jinji Lake Scenic Area \" , the_most_suitable_people equal_to \" friend \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, my friend is coming to visit me and we're going to an amusement park tomorrow. But I don't go out much, so can you recommend a slightly more expensive amusement park? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Suzhou Amusement Land Forest and Water World \" USER: Could you tell me about its special features? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Suzhou Amusement Land Forest and Water World \" AGENT_ACTS: ( attraction ) inform features equal_to \" forest-themed, like being in a vast forest close to the ocean \" USER: That sounds fun. What are the opening hours? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform features equal_to \" forest-themed, like being in a vast forest close to the ocean \" AGENT_ACTS: ( attraction ) inform opening_hours equal_to \" 09:00-17:00 \" USER: I see. It has a high rating, right? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform opening_hours equal_to \" 09:00-17:00 \" AGENT_ACTS: ( attraction ) inform score equal_to \" 4.4 \" USER: OK, I see. Thank you for your help. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , the_most_suitable_people equal_to \" friend \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform score equal_to \" 4.4 \" AGENT_ACTS: ( general ) you_are_welcome USER: Sure, but I have no more questions for now. Goodbye! <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , the_most_suitable_people equal_to \" friend \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, My friend is coming to Suzhou to visit me and I'm thinking about taking him to a landscape scenic spot. Can you please recommend a more expensive attraction? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" a slightly more expensive \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Jinji Lake Scenic Area \" USER: What's the attraction like? Anything special? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" a slightly more expensive \" , name equal_to \" Shajiabang Scenic Area \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Jinji Lake Scenic Area \" AGENT_ACTS: ( attraction ) inform features equal_to \" the birthplace of the revolutionary Peking opera 'Shajiabang'. You can visit the scene from the opera and take a boat amid reed marshes. \" USER: That's great. My friend likes Peking opera very much. Could you tell me the opening hours of the attraction? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" a slightly more expensive \" , name equal_to \" Shajiabang Scenic Area \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform features equal_to \" the birthplace of the revolutionary Peking opera 'Shajiabang'. You can visit the scene from the opera and take a boat amid reed marshes. \" AGENT_ACTS: ( attraction ) inform opening_hours equal_to \" 08:00-16:30 \" USER: Can we get there by subway? That would be convenient. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" a slightly more expensive \" , name equal_to \" Shajiabang Scenic Area \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform opening_hours equal_to \" 08:00-16:30 \" AGENT_ACTS: ( attraction ) inform metro_station equal_to \" false \" USER: All right, we'll drive there then. Thank you for answering all my questions. Bye! <endofhistory>",
    "output": "( attraction ) consumption equal_to \" expensive \" , name equal_to \" Shajiabang Scenic Area \" , the_most_suitable_people equal_to \" friend \" , type equal_to \" landscape scenic spot \"",
    "prediction": "( attraction ) type equal_to \" landscape scenic spot \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm in Suzhou Industrial Park and I'd like to go to an amusement park with a subway station nearby. <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , metro_station equal_to \" with a subway station nearby \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , type equal_to \" amusement park \" , metro_station equal_to \" true \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , type equal_to \" amusement park \" , metro_station equal_to \" true \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Huayi Brothers Movie World \" USER: What's the address? <endofhistory>",
    "output": "( attraction ) area equal_to \" Industrial Park \" , metro_station equal_to \" with a subway station nearby \" , name equal_to \" Huayi Brothers Movie World \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , type equal_to \" amusement park \" , metro_station equal_to \" true \" , name equal_to \" Huayi Brothers Movie World \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , type equal_to \" amusement park \" , metro_station equal_to \" true \" , name equal_to \" Huayi Brothers Movie World \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Huayi Brothers Movie World \" AGENT_ACTS: ( attraction ) inform address equal_to \" No. 188, Yangchenghu Avenue, Suzhou Industrial Park, Suzhou City \" USER: What's its rating? <endofhistory>",
    "output": "( attraction ) area equal_to \" Industrial Park \" , metro_station equal_to \" with a subway station nearby \" , name equal_to \" Huayi Brothers Movie World \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , type equal_to \" amusement park \" , metro_station equal_to \" true \" , name equal_to \" Huayi Brothers Movie World \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , type equal_to \" amusement park \" , metro_station equal_to \" true \" , name equal_to \" Huayi Brothers Movie World \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" No. 188, Yangchenghu Avenue, Suzhou Industrial Park, Suzhou City \" AGENT_ACTS: ( attraction ) inform score equal_to \" 4.5 \" USER: Can I get there by subway? <endofhistory>",
    "output": "( attraction ) area equal_to \" Industrial Park \" , metro_station equal_to \" can \" , name equal_to \" Huayi Brothers Movie World \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , type equal_to \" amusement park \" , metro_station equal_to \" true \" , name equal_to \" Huayi Brothers Movie World \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , type equal_to \" amusement park \" , metro_station equal_to \" true \" , name equal_to \" Huayi Brothers Movie World \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform score equal_to \" 4.5 \" AGENT_ACTS: ( attraction ) confirm metro_station USER: Thank you so much for your help, bye! <endofhistory>",
    "output": "( attraction ) area equal_to \" Industrial Park \" , metro_station equal_to \" can \" , name equal_to \" Huayi Brothers Movie World \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , type equal_to \" amusement park \" , metro_station equal_to \" true \" , name equal_to \" Huayi Brothers Movie World \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, we're coming to Suzhou on a business trip and we'd like to visit Eslite Bookstore. Can we get there by subway? <endofhistory>",
    "output": "( attraction ) name equal_to \" Eslite Bookstore \"",
    "prediction": "( attraction ) name equal_to \" Eslite Bookstore \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Eslite Bookstore \" <endofstate> <history> AGENT_ACTS: ( attraction ) inform metro_station equal_to \" true \" USER: That's great. What are its opening hours? <endofhistory>",
    "output": "( attraction ) name equal_to \" Eslite Bookstore \"",
    "prediction": "( attraction ) name equal_to \" Eslite Bookstore \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Eslite Bookstore \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform metro_station equal_to \" true \" AGENT_ACTS: ( attraction ) inform opening_hours equal_to \" 10:00-22:00 \" USER: What's its rating? <endofhistory>",
    "output": "( attraction ) name equal_to \" Eslite Bookstore \"",
    "prediction": "( attraction ) name equal_to \" Eslite Bookstore \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) name equal_to \" Eslite Bookstore \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform opening_hours equal_to \" 10:00-22:00 \" AGENT_ACTS: ( attraction ) inform score equal_to \" 4.7 \" USER: Well, no tickets are needed there, right? <endofhistory>",
    "output": "( attraction ) name equal_to \" Eslite Bookstore \"",
    "prediction": "( attraction ) name equal_to \" Eslite Bookstore \" , ticket_price equal_to \" free \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello. I'm touring Suzhou. Can you please recommend a good hotel in Wuzhong District? <endofhistory>",
    "output": "( hotel ) area equal_to \" Wuzhong District \"",
    "prediction": "( hotel ) area equal_to \" Wuzhong District \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) area equal_to \" Wuzhong District \" <endofstate> <history> AGENT_ACTS: ( hotel ) recommend name equal_to \" Chengyi Lianhao Hotel \" USER: How many stars does it have? <endofhistory>",
    "output": "( hotel ) area equal_to \" Wuzhong District \" , name equal_to \" Manxin Hotel \"",
    "prediction": "( hotel ) area equal_to \" Wuzhong District \" , name equal_to \" Chengyi Lianhao Hotel \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) area equal_to \" Wuzhong District \" , name equal_to \" Chengyi Lianhao Hotel \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) recommend name equal_to \" Chengyi Lianhao Hotel \" AGENT_ACTS: ( general ) inform Message = \" No item available. \" USER: Well, I'd like a 2-star hotel. Do you have any recommendations? <endofhistory>",
    "output": "( hotel ) area equal_to \" Wuzhong District \" , star equal_to \" 2 \"",
    "prediction": "The belief state provided does not require normalization as the 'area' slot is already in the correct format, and the 'star' slot is not one of the slots that has been defined for normalization in the instructions. The belief state remains unchanged:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The belief state provided does not require normalization as the 'area' slot is already in the correct format, and the 'star' slot is not one of the slots that has been defined for normalization in the instructions. The belief state remains unchanged: <endofstate> <history> AGENT_ACTS_PREV: ( general ) inform Message = \" No item available. \" AGENT_ACTS: ( hotel ) recommend name equal_to \" Chengyi Lianhao Hotel \" USER: OK, does it have king-size rooms? <endofhistory>",
    "output": "( hotel ) area equal_to \" Wuzhong District \" , name equal_to \" Chengyi Lianhao Hotel \" , star equal_to \" 2 \"",
    "prediction": "( hotel ) name equal_to \" Chengyi Lianhao Hotel \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Chengyi Lianhao Hotel \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) recommend name equal_to \" Chengyi Lianhao Hotel \" AGENT_ACTS: ( hotel ) inform room_type equal_to \" king-size room \" USER: OK. What's its rating? <endofhistory>",
    "output": "( hotel ) area equal_to \" Wuzhong District \" , name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size rooms \" , star equal_to \" 2 \"",
    "prediction": "( hotel ) name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform room_type equal_to \" king-size room \" AGENT_ACTS: ( hotel ) inform score equal_to \" 4.6 \" USER: You’re right. How much is a room? <endofhistory>",
    "output": "( hotel ) area equal_to \" Wuzhong District \" , name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size rooms \" , star equal_to \" 2 \"",
    "prediction": "( hotel ) name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform score equal_to \" 4.6 \" AGENT_ACTS: ( hotel ) inform room_charge equal_to \" 148 yuan \" USER: True, that's quite cheap Does it have a parking lot? <endofhistory>",
    "output": "( hotel ) area equal_to \" Wuzhong District \" , name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size rooms \" , star equal_to \" 2 \"",
    "prediction": "( hotel ) name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size room \" , parking equal_to \" true \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size room \" , parking equal_to \" true \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform room_charge equal_to \" 148 yuan \" AGENT_ACTS: ( hotel ) inform parking equal_to \" not available \" USER: OK, I got it. Thank you, bye bye. <endofhistory>",
    "output": "( hotel ) area equal_to \" Wuzhong District \" , name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size rooms \" , star equal_to \" 2 \"",
    "prediction": "( hotel ) name equal_to \" Chengyi Lianhao Hotel \" , room_type equal_to \" king-size room \" , parking equal_to \" false \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm planning a trip to Suzhou. Can you please recommend a hotel? I'd like a standard room in a business hotel. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , room_type equal_to \" standard rooms \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \" , hotel_type equal_to \" business hotel \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" , hotel_type equal_to \" business hotel \" <endofstate> <history> AGENT_ACTS: ( hotel ) recommend name equal_to \" Suzhou Manxiang Theme Hotel \" USER: Yes, a 5-star hotel would be the best. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , room_type equal_to \" standard rooms \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \" , hotel_type equal_to \" business hotel \" , star equal_to \" 5 \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" , hotel_type equal_to \" business hotel \" , star equal_to \" 5 \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) recommend name equal_to \" Suzhou Manxiang Theme Hotel \" AGENT_ACTS: ( hotel ) recommend name equal_to \" Suzhou Shui'an Hanshe Boutique Hotel \" USER: Do you know its rating? And what about parking? <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , name equal_to \" Suzhou Shui'an Hanshe Boutique Hotel \" , room_type equal_to \" standard rooms \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \" , hotel_type equal_to \" business hotel \" , star equal_to \" 5 \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" , hotel_type equal_to \" business hotel \" , star equal_to \" 5 \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) recommend name equal_to \" Suzhou Shui'an Hanshe Boutique Hotel \" AGENT_ACTS: ( hotel ) inform score equal_to \" 4.6 \" , parking equal_to \" free \" USER: What's the address? Please tell me. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , name equal_to \" Suzhou Shui'an Hanshe Boutique Hotel \" , room_type equal_to \" standard rooms \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \" , hotel_type equal_to \" business hotel \" , star equal_to \" 5 \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" , hotel_type equal_to \" business hotel \" , star equal_to \" 5 \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform score equal_to \" 4.6 \" , parking equal_to \" free \" AGENT_ACTS: ( hotel ) inform address equal_to \" No. 5-9, Nanxin Street, Lili Town, Wujiang District, Suzhou \" USER: That's all I needed. Thank you and bye. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , name equal_to \" Suzhou Shui'an Hanshe Boutique Hotel \" , room_type equal_to \" standard rooms \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \" , hotel_type equal_to \" business hotel \" , star equal_to \" 5 \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm planning a trip to Suzhou. Can you please recommend a 5-star hotel? I'd like a resort hotel. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , star equal_to \" 5 \"",
    "prediction": "The provided belief state does not include any slots that need to be normalized to a predefined set of values. The values \"5\" for star and \"resort hotel\" for hotel_type are already in an acceptable format. Therefore, no changes are necessary."
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided belief state does not include any slots that need to be normalized to a predefined set of values. The values \"5\" for star and \"resort hotel\" for hotel_type are already in an acceptable format. Therefore, no changes are necessary. <endofstate> <history> AGENT_ACTS: ( hotel ) recommend name equal_to \" Pan Pacific Suzhou \" USER: A standard room. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , room_type equal_to \" standard room \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) recommend name equal_to \" Pan Pacific Suzhou \" AGENT_ACTS: ( hotel ) inform room_charge equal_to \" 592 yuan \" USER: Is the hotel's parking lot free? <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , name equal_to \" Pan Pacific Suzhou \" , room_type equal_to \" standard room \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform room_charge equal_to \" 592 yuan \" AGENT_ACTS: ( hotel ) inform parking equal_to \" free \" USER: What's the phone number? <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , name equal_to \" Pan Pacific Suzhou \" , room_type equal_to \" standard room \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform parking equal_to \" free \" AGENT_ACTS: ( hotel ) inform phone_number equal_to \" 0512-65103388 \" USER: How much does a room cost? <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , name equal_to \" Pan Pacific Suzhou \" , room_type equal_to \" standard room \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform phone_number equal_to \" 0512-65103388 \" AGENT_ACTS: ( hotel ) inform room_charge equal_to \" 592 yuan \" USER: Thank you. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , name equal_to \" Pan Pacific Suzhou \" , room_type equal_to \" standard room \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform room_charge equal_to \" 592 yuan \" AGENT_ACTS: ( general ) you_are_welcome USER: Goodbye. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , name equal_to \" Pan Pacific Suzhou \" , room_type equal_to \" standard room \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going on a trip to Suzhou. Can you please recommend a 2-star hotel with king-size rooms in Gusu District? <endofhistory>",
    "output": "( hotel ) area equal_to \" Gusu District \" , room_type equal_to \" king-size rooms \" , star equal_to \" 2 \"",
    "prediction": "The belief state provided does not require normalization as all slots are already in the correct format based on the given possible values. The normalized belief state remains:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The belief state provided does not require normalization as all slots are already in the correct format based on the given possible values. The normalized belief state remains: <endofstate> <history> AGENT_ACTS: ( hotel ) recommend name equal_to \" Super 8 Hotel \" USER: What's the address? <endofhistory>",
    "output": "( hotel ) area equal_to \" Gusu District \" , name equal_to \" Super 8 Hotel \" , room_type equal_to \" king-size rooms \" , star equal_to \" 2 \"",
    "prediction": "( hotel ) name equal_to \" Super 8 Hotel \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Super 8 Hotel \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) recommend name equal_to \" Super 8 Hotel \" AGENT_ACTS: ( hotel ) inform address equal_to \" No. 318, Loumen Road, Gusu District, Suzhou \" USER: What about the phone number? <endofhistory>",
    "output": "( hotel ) area equal_to \" Gusu District \" , name equal_to \" Super 8 Hotel \" , room_type equal_to \" king-size rooms \" , star equal_to \" 2 \"",
    "prediction": "( hotel ) name equal_to \" Super 8 Hotel \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Super 8 Hotel \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform address equal_to \" No. 318, Loumen Road, Gusu District, Suzhou \" AGENT_ACTS: ( hotel ) inform phone_number equal_to \" 0512-67729999 \" USER: Does it have a parking lot? <endofhistory>",
    "output": "( hotel ) area equal_to \" Gusu District \" , name equal_to \" Super 8 Hotel \" , room_type equal_to \" king-size rooms \" , star equal_to \" 2 \"",
    "prediction": "( hotel ) name equal_to \" Super 8 Hotel \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Super 8 Hotel \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform phone_number equal_to \" 0512-67729999 \" AGENT_ACTS: ( hotel ) inform parking equal_to \" free \" USER: OK, thank you. Goodbye! <endofhistory>",
    "output": "( hotel ) area equal_to \" Gusu District \" , name equal_to \" Super 8 Hotel \" , room_type equal_to \" king-size rooms \" , star equal_to \" 2 \"",
    "prediction": "The provided belief state does not include any slots that need to be normalized to a predefined set of values. The information given is already in a clear and acceptable format. Therefore, the belief state remains unchanged:"
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm planning a trip to Suzhou. Can you please recommend a 3-star resort hotel? <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , star equal_to \" 3 \"",
    "prediction": "The provided belief state does not include a slot for \"hotel_type\" within the hotel domain, and the value \"resort hotel\" is not among the normalized options provided for other slots. Therefore, the belief state should not be changed based on the information given. The normalized belief state for the provided information would be:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided belief state does not include a slot for \"hotel_type\" within the hotel domain, and the value \"resort hotel\" is not among the normalized options provided for other slots. Therefore, the belief state should not be changed based on the information given. The normalized belief state for the provided information would be: <endofstate> <history> AGENT_ACTS: ( hotel ) recommend name equal_to \" Womu Boutique Hotel \" USER: I want a standard room. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , name equal_to \" Warmly Boutique Hotel \" , room_type equal_to \" standard rooms \" , star equal_to \" 3 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) recommend name equal_to \" Womu Boutique Hotel \" AGENT_ACTS: ( hotel ) inform room_charge equal_to \" 463 yuan \" USER: Thanks, what's the phone number? <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , name equal_to \" Warmly Boutique Hotel \" , room_type equal_to \" standard rooms \" , star equal_to \" 3 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform room_charge equal_to \" 463 yuan \" AGENT_ACTS: ( hotel ) inform phone_number equal_to \" 0512-85883698 \" USER: Got it, how much are the rooms? <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , name equal_to \" Warmly Boutique Hotel \" , room_type equal_to \" standard rooms \" , star equal_to \" 3 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \" , room_charge equal_to \" 463 yuan \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" , room_charge equal_to \" 463 yuan \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform phone_number equal_to \" 0512-85883698 \" AGENT_ACTS: ( hotel ) inform room_charge equal_to \" 463 yuan \" USER: What's the address? <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , name equal_to \" Warmly Boutique Hotel \" , room_type equal_to \" standard rooms \" , star equal_to \" 3 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \" , room_charge equal_to \" 463 yuan \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) room_type equal_to \" standard room \" , room_charge equal_to \" 463 yuan \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform room_charge equal_to \" 463 yuan \" AGENT_ACTS: ( hotel ) inform address USER: Thank you, bye. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" resort hotel \" , name equal_to \" Warmly Boutique Hotel \" , room_type equal_to \" standard rooms \" , star equal_to \" 3 \"",
    "prediction": "( hotel ) room_type equal_to \" standard room \" , room_charge equal_to \" 463 yuan \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hi, I'm planning a trip to Suzhou. But there are too many hotels to pick from. Can you please recommend one? <endofhistory>",
    "output": "null",
    "prediction": "( hotel ) No change needed."
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> AGENT_ACTS: ( hotel ) request star USER: A 1-star hotel is fine, but I'd like a business hotel. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , star equal_to \" 1 \"",
    "prediction": "The provided belief state does not include any slots that need to be normalized to a predefined set of values based on the examples given. The values \"1\" for star and \"business hotel\" for hotel_type do not conflict with any normalization requirements provided. Therefore, the belief state remains unchanged:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided belief state does not include any slots that need to be normalized to a predefined set of values based on the examples given. The values \"1\" for star and \"business hotel\" for hotel_type do not conflict with any normalization requirements provided. Therefore, the belief state remains unchanged: <endofstate> <history> AGENT_ACTS_PREV: null AGENT_ACTS: ( hotel ) recommend name equal_to \" Suzhou Yongshun Express Hotel \" USER: I want a king-size room. I'm traveling alone. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , room_type equal_to \" king-size room \" , star equal_to \" 1 \"",
    "prediction": "( hotel ) name equal_to \" Suzhou Yongshun Express Hotel \" , room_type equal_to \" king-size room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Suzhou Yongshun Express Hotel \" , room_type equal_to \" king-size room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) recommend name equal_to \" Suzhou Yongshun Express Hotel \" AGENT_ACTS: ( hotel ) recommend name equal_to \" Home Inn \" USER: Yes, I am. Which district is it in? <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , name equal_to \" Home Inn \" , room_type equal_to \" king-size room \" , star equal_to \" 1 \"",
    "prediction": "( hotel ) name equal_to \" Home Inn \" , room_type equal_to \" king-size room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Home Inn \" , room_type equal_to \" king-size room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) recommend name equal_to \" Home Inn \" AGENT_ACTS: ( hotel ) inform area equal_to \" Suzhou New District \" USER: I will probably drive there, I'll put the address into my GPS. By the way, is there a parking lot? How much does it charge? Or is it free? <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , name equal_to \" Home Inn \" , room_type equal_to \" king-size room \" , star equal_to \" 1 \"",
    "prediction": "( hotel ) name equal_to \" Home Inn \" , room_type equal_to \" king-size room \" , area equal_to \" Suzhou New District \" , parking equal_to \" true \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Home Inn \" , room_type equal_to \" king-size room \" , area equal_to \" Suzhou New District \" , parking equal_to \" true \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform area equal_to \" Suzhou New District \" AGENT_ACTS: ( hotel ) inform parking equal_to \" free \" USER: Well, I want to know the hotel's phone number, just in case something happens. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , name equal_to \" Home Inn \" , room_type equal_to \" king-size room \" , star equal_to \" 1 \"",
    "prediction": "( hotel ) name equal_to \" Home Inn \" , room_type equal_to \" king-size room \" , area equal_to \" Suzhou New District \" , parking equal_to \" true \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) name equal_to \" Home Inn \" , room_type equal_to \" king-size room \" , area equal_to \" Suzhou New District \" , parking equal_to \" true \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform parking equal_to \" free \" AGENT_ACTS: ( hotel ) inform phone_number equal_to \" 0512-68019666 \" USER: That's all. Thank you, bye. <endofhistory>",
    "output": "( hotel ) hotel_type equal_to \" business \" , name equal_to \" Home Inn \" , room_type equal_to \" king-size room \" , star equal_to \" 1 \"",
    "prediction": "( hotel ) name equal_to \" Home Inn \" , room_type equal_to \" king-size room \" , area equal_to \" Suzhou New District \" , parking equal_to \" true \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm traveling to Suzhou. Can you please recommend a hotel in Suzhou Industrial Park? <endofhistory>",
    "output": "( hotel ) area equal_to \" Suzhou Industrial Park \"",
    "prediction": "( hotel ) area equal_to \" Suzhou Industrial Park \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) area equal_to \" Suzhou Industrial Park \" <endofstate> <history> AGENT_ACTS: ( hotel ) recommend name equal_to \" Suzhou Jinji Lake Shilla Hotel \" USER: I'd like a 5-star hotel with standard rooms. <endofhistory>",
    "output": "( hotel ) area equal_to \" Suzhou Industrial Park \" , room_type equal_to \" standard rooms \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) area equal_to \" Suzhou Industrial Park \" , star equal_to \" 5 \" , room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) area equal_to \" Suzhou Industrial Park \" , star equal_to \" 5 \" , room_type equal_to \" standard room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) recommend name equal_to \" Suzhou Jinji Lake Shilla Hotel \" AGENT_ACTS: ( hotel ) inform price equal_to \" 640 yuan \" USER: Great. What's the phone number? I want to book a room. <endofhistory>",
    "output": "( hotel ) area equal_to \" Suzhou Industrial Park \" , name equal_to \" Jinji Lake Shilla Hotel Suzhou \" , room_type equal_to \" standard rooms \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) area equal_to \" Suzhou Industrial Park \" , star equal_to \" 5 \" , room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) area equal_to \" Suzhou Industrial Park \" , star equal_to \" 5 \" , room_type equal_to \" standard room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform price equal_to \" 640 yuan \" AGENT_ACTS: ( hotel ) inform phone_number equal_to \" 0512-62968888 \" USER: Got it. Can you please check if the hotel offers parking? <endofhistory>",
    "output": "( hotel ) area equal_to \" Suzhou Industrial Park \" , name equal_to \" Jinji Lake Shilla Hotel Suzhou \" , room_type equal_to \" standard rooms \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) area equal_to \" Suzhou Industrial Park \" , star equal_to \" 5 \" , room_type equal_to \" standard room \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) area equal_to \" Suzhou Industrial Park \" , star equal_to \" 5 \" , room_type equal_to \" standard room \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform phone_number equal_to \" 0512-62968888 \" AGENT_ACTS: ( hotel ) inform parking equal_to \" free \" USER: That's great. I plan to rent a car to make the trip easier. Just one more question, is the hotel room expensive? <endofhistory>",
    "output": "( hotel ) area equal_to \" Suzhou Industrial Park \" , name equal_to \" Jinji Lake Shilla Hotel Suzhou \" , room_type equal_to \" standard rooms \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) area equal_to \" Suzhou Industrial Park \" , star equal_to \" 5 \" , room_type equal_to \" standard room \" , parking equal_to \" free \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( hotel ) area equal_to \" Suzhou Industrial Park \" , star equal_to \" 5 \" , room_type equal_to \" standard room \" , parking equal_to \" free \" <endofstate> <history> AGENT_ACTS_PREV: ( hotel ) inform parking equal_to \" free \" AGENT_ACTS: ( hotel ) inform pricerange equal_to \" slightly expensive \" , room_charge equal_to \" 640 yuan \" USER: Thank you, goodbye! <endofhistory>",
    "output": "( hotel ) area equal_to \" Suzhou Industrial Park \" , name equal_to \" Jinji Lake Shilla Hotel Suzhou \" , room_type equal_to \" standard rooms \" , star equal_to \" 5 \"",
    "prediction": "( hotel ) area equal_to \" Suzhou Industrial Park \" , star equal_to \" 5 \" , room_type equal_to \" standard room \" , parking equal_to \" free \" , pricerange equal_to \" slightly expensive \" , room_charge equal_to \" 640 yuan \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm visiting Suzhou. Can you please recommend a good place for couples in Suzhou Industrial Park? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" couples \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Jinji Lake Scenic Area \" USER: Does it have a high rating? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , name equal_to \" Jinji Lake Scenic Area \" , the_most_suitable_people equal_to \" couples \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Jinji Lake Scenic Area \" AGENT_ACTS: ( attraction ) inform score equal_to \" 4.5 \" USER: What's special about the attraction? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , name equal_to \" Jinji Lake Scenic Area \" , the_most_suitable_people equal_to \" couples \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform score equal_to \" 4.5 \" AGENT_ACTS: ( attraction ) inform features equal_to \" get a good view of tall buildings like the Gate of the Orient, ride the Ferris wheel, take a night cruise, and feel the modern side of Suzhou \" USER: Is there a restaurant serving Sichuan cuisine nearby? A mid-priced one would be good. <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , name equal_to \" Jinji Lake Scenic Area \" , the_most_suitable_people equal_to \" couples \" ( restaurant ) cuisine equal_to \" Sichuan cuisine \" , pricerange equal_to \" mid \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform features equal_to \" get a good view of tall buildings like the Gate of the Orient, ride the Ferris wheel, take a night cruise, and feel the modern side of Suzhou \" AGENT_ACTS: ( restaurant ) recommend name equal_to \" Riverside Grilled Fish \" USER: What's its rating? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , name equal_to \" Jinji Lake Scenic Area \" , the_most_suitable_people equal_to \" couples \" ( restaurant ) cuisine equal_to \" Sichuan cuisine \" , name equal_to \" Riverside Grilled Fish \" , pricerange equal_to \" mid \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) recommend name equal_to \" Riverside Grilled Fish \" AGENT_ACTS: ( restaurant ) inform score equal_to \" 4.3 \" USER: What are the opening hours? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , name equal_to \" Jinji Lake Scenic Area \" , the_most_suitable_people equal_to \" couples \" ( restaurant ) cuisine equal_to \" Sichuan cuisine \" , name equal_to \" Riverside Grilled Fish \" , pricerange equal_to \" mid \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) inform score equal_to \" 4.3 \" AGENT_ACTS: ( restaurant ) inform business_hours equal_to \" 10:30-22:00, Monday to Sunday \" USER: That's all I needed. Thank you, bye. <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , name equal_to \" Jinji Lake Scenic Area \" , the_most_suitable_people equal_to \" couples \" ( restaurant ) cuisine equal_to \" Sichuan cuisine \" , name equal_to \" Riverside Grilled Fish \" , pricerange equal_to \" mid \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , the_most_suitable_people equal_to \" dating \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, my friend is coming to Suzhou this weekend and I'm thinking about taking her to a fun place in the mid-priced range. Can you please find me one? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \"",
    "prediction": "( attraction ) consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Humble Administrator's Garden \" USER: Yes, somewhere in Suzhou Industrial Park would be the best. It's near my home, which makes it more convenient. <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" mid \" , the_most_suitable_people equal_to \" friend \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Humble Administrator's Garden \" AGENT_ACTS: ( attraction ) recommend name equal_to \" Impression City Shopping Center \" USER: OK, what's its rating? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" mid \" , name equal_to \" Impression City Shopping Center \" , the_most_suitable_people equal_to \" friend \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Impression City Shopping Center \" AGENT_ACTS: ( attraction ) inform score equal_to \" 4.1 \" USER: Not too bad. Is the ticket expensive? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" mid \" , name equal_to \" Impression City Shopping Center \" , the_most_suitable_people equal_to \" friend \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform score equal_to \" 4.1 \" AGENT_ACTS: ( attraction ) inform ticket_price equal_to \" free \" USER: I like free attractions, haha. When we're done there, I'd like to go to a slightly more expensive restaurant with my friend. Do you have any recommendations? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" mid \" , name equal_to \" Impression City Shopping Center \" , the_most_suitable_people equal_to \" friend \" ( restaurant ) pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform ticket_price equal_to \" free \" AGENT_ACTS: ( restaurant ) recommend name equal_to \" L'Arôme \" USER: The name of the restaurant sounds good. How about the average spend? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" mid \" , name equal_to \" Impression City Shopping Center \" , the_most_suitable_people equal_to \" friend \" ( restaurant ) name equal_to \" L'Arôme \" , pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) recommend name equal_to \" L'Arôme \" AGENT_ACTS: ( restaurant ) inform per_capita_consumption equal_to \" 412 yuan \" USER: A bit expensive, but acceptable. Do you know its phone number? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" mid \" , name equal_to \" Impression City Shopping Center \" , the_most_suitable_people equal_to \" friend \" ( restaurant ) name equal_to \" L'Arôme \" , pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) inform per_capita_consumption equal_to \" 412 yuan \" AGENT_ACTS: ( restaurant ) inform phone_number equal_to \" 0512-69881018 \" USER: OK, thank you so much for the help, bye! <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" mid \" , name equal_to \" Impression City Shopping Center \" , the_most_suitable_people equal_to \" friend \" ( restaurant ) name equal_to \" L'Arôme \" , pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Suzhou Industrial Park \" , consumption equal_to \" moderate \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, my friend is coming to Suzhou to visit me and I want to find a slightly more expensive attraction where we can have some fun. A place near Changshu would be the best as it's near my home. Do you have any recommendations? <endofhistory>",
    "output": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Shajiabang Scenic Spot \" USER: Well, is there a subway station close to the attraction? <endofhistory>",
    "output": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly more expensive \" , name equal_to \" Shajiabang Scenic Area \"",
    "prediction": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Shajiabang Scenic Spot \" AGENT_ACTS: ( attraction ) inform metro_station equal_to \" false \" USER: Oh, no, then I can't get there by subway. What's special about it? <endofhistory>",
    "output": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly more expensive \" , name equal_to \" Shajiabang Scenic Area \"",
    "prediction": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform metro_station equal_to \" false \" AGENT_ACTS: ( attraction ) inform features equal_to \" the birthplace of the revolutionary Peking opera 'Shajiabang'. You can visit the scene from the opera and take a boat amid reed marshes. \" USER: Well, that actually sounds like something I'd like. We'd also like to go to a nearby cheap restaurant for a meal. Where should we go? <endofhistory>",
    "output": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly more expensive \" , name equal_to \" Shajiabang Scenic Area \" , the_most_suitable_people equal_to \" friend \" ( restaurant ) pricerange equal_to \" cheap \"",
    "prediction": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform features equal_to \" the birthplace of the revolutionary Peking opera 'Shajiabang'. You can visit the scene from the opera and take a boat amid reed marshes. \" AGENT_ACTS: ( restaurant ) recommend name equal_to \" Xiewang Restaurant \" USER: Cool name, I can't wait to go. What are the recommended dishes? <endofhistory>",
    "output": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly more expensive \" , name equal_to \" Shajiabang Scenic Area \" , the_most_suitable_people equal_to \" friend \" ( restaurant ) name equal_to \" Xiewang Restaurant \" , pricerange equal_to \" cheap \"",
    "prediction": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) recommend name equal_to \" Xiewang Restaurant \" AGENT_ACTS: ( restaurant ) inform dishes equal_to \" Hairy Crab \" USER: Wow, my mouth is watering. Could you tell me the address of the restaurant? I can't wait. <endofhistory>",
    "output": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly more expensive \" , name equal_to \" Shajiabang Scenic Area \" , the_most_suitable_people equal_to \" friend \" ( restaurant ) name equal_to \" Xiewang Restaurant \" , pricerange equal_to \" cheap \"",
    "prediction": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) inform dishes equal_to \" Hairy Crab \" AGENT_ACTS: ( restaurant ) inform address equal_to \" near the parking lot of the scenic area, Luweidang Road \" USER: OK, I got it. Thank you for your help. <endofhistory>",
    "output": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly more expensive \" , name equal_to \" Shajiabang Scenic Area \" , the_most_suitable_people equal_to \" friend \" ( restaurant ) name equal_to \" Xiewang Restaurant \" , pricerange equal_to \" cheap \"",
    "prediction": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) inform address equal_to \" near the parking lot of the scenic area, Luweidang Road \" AGENT_ACTS: ( general ) you_are_welcome USER: Well, see you, bye. <endofhistory>",
    "output": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly more expensive \" , name equal_to \" Shajiabang Scenic Area \" , the_most_suitable_people equal_to \" friend \" ( restaurant ) name equal_to \" Xiewang Restaurant \" , pricerange equal_to \" cheap \"",
    "prediction": "( attraction ) area equal_to \" Changshu \" , consumption equal_to \" slightly expensive \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going to Suzhou on a business trip and I'd like to visit some commercial centers. Can you please recommend one in the mid-price range? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , type equal_to \" commercial center \"",
    "prediction": "( attraction ) type equal_to \" commercial center \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" commercial center \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Guanqian Street \" USER: How much is the ticket? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Guanqian Street \" , type equal_to \" commercial center \"",
    "prediction": "( attraction ) type equal_to \" commercial center \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" commercial center \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Guanqian Street \" AGENT_ACTS: ( attraction ) inform ticket_price equal_to \" free \" USER: What are the opening hours? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Guanqian Street \" , type equal_to \" commercial center \"",
    "prediction": "( attraction ) type equal_to \" commercial center \" , consumption equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" commercial center \" , consumption equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform ticket_price equal_to \" free \" AGENT_ACTS: ( attraction ) inform opening_hours equal_to \" all day \" USER: Can you please recommend a cheap Japanese restaurant in Suzhou? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Guanqian Street \" , type equal_to \" commercial center \" ( restaurant ) cuisine equal_to \" Japanese restaurant \" , pricerange equal_to \" cheap \"",
    "prediction": "( restaurant ) cuisine equal_to \" Japanese \" , pricerange equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( restaurant ) cuisine equal_to \" Japanese \" , pricerange equal_to \" cheap \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform opening_hours equal_to \" all day \" AGENT_ACTS: ( restaurant ) recommend name equal_to \" One Plus Conveyor Belt Sushi \" USER: What's its rating? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Guanqian Street \" , type equal_to \" commercial center \" ( restaurant ) cuisine equal_to \" Japanese restaurant \" , name equal_to \" One Plus Conveyor Belt Sushi \" , pricerange equal_to \" cheap \"",
    "prediction": "( restaurant ) cuisine equal_to \" Japanese \" , pricerange equal_to \" cheap \" , name equal_to \" One Plus Conveyor Belt Sushi \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( restaurant ) cuisine equal_to \" Japanese \" , pricerange equal_to \" cheap \" , name equal_to \" One Plus Conveyor Belt Sushi \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) recommend name equal_to \" One Plus Conveyor Belt Sushi \" AGENT_ACTS: ( restaurant ) inform score equal_to \" 4.4 \" USER: Is there a subway station nearby? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Guanqian Street \" , type equal_to \" commercial center \" ( restaurant ) cuisine equal_to \" Japanese restaurant \" , name equal_to \" One Plus Conveyor Belt Sushi \" , pricerange equal_to \" cheap \"",
    "prediction": "( restaurant ) cuisine equal_to \" Japanese \" , pricerange equal_to \" cheap \" , name equal_to \" One Plus Conveyor Belt Sushi \" , metro_station equal_to \" true \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( restaurant ) cuisine equal_to \" Japanese \" , pricerange equal_to \" cheap \" , name equal_to \" One Plus Conveyor Belt Sushi \" , metro_station equal_to \" true \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) inform score equal_to \" 4.4 \" AGENT_ACTS: ( restaurant ) inform metro_station equal_to \" false \" USER: Thank you for your help. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Guanqian Street \" , type equal_to \" commercial center \" ( restaurant ) cuisine equal_to \" Japanese restaurant \" , name equal_to \" One Plus Conveyor Belt Sushi \" , pricerange equal_to \" cheap \"",
    "prediction": "( restaurant ) cuisine equal_to \" Japanese \" , pricerange equal_to \" cheap \" , name equal_to \" One Plus Conveyor Belt Sushi \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( restaurant ) cuisine equal_to \" Japanese \" , pricerange equal_to \" cheap \" , name equal_to \" One Plus Conveyor Belt Sushi \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) inform metro_station equal_to \" false \" AGENT_ACTS: ( general ) you_are_welcome USER: Goodbye. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" mid \" , name equal_to \" Guanqian Street \" , type equal_to \" commercial center \" ( restaurant ) cuisine equal_to \" Japanese restaurant \" , name equal_to \" One Plus Conveyor Belt Sushi \" , pricerange equal_to \" cheap \"",
    "prediction": "( restaurant ) cuisine equal_to \" Japanese \" , pricerange equal_to \" cheap \" , name equal_to \" One Plus Conveyor Belt Sushi \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm traveling in Suzhou. I want to find an attraction in Gusu District where I can go with friends. <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Guanqian Street \" USER: OK, please check its phone number for me. <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , name equal_to \" Guanqian Street \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Guanqian Street \" AGENT_ACTS: ( attraction ) inform phone_number equal_to \" N/A \" USER: What's the address of Guanqian Street? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , name equal_to \" Guanqian Street \" , the_most_suitable_people equal_to \" go with friends \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform phone_number equal_to \" N/A \" AGENT_ACTS: ( attraction ) inform address equal_to \" Guanqian Street, Gusu District, Suzhou City. \" USER: Okay. I like Jiangsu Zhejiang cuisine. Can you find me a slightly more expensive restaurant nearby? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , name equal_to \" Guanqian Street \" , the_most_suitable_people equal_to \" go with friends \" ( restaurant ) cuisine equal_to \" Jiangsu Zhejiang Cuisine \" , pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" Guanqian Street, Gusu District, Suzhou City. \" AGENT_ACTS: ( restaurant ) recommend name equal_to \" Songhelou Restaurant \" USER: What's the phone number for the restaurant? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , name equal_to \" Guanqian Street \" , the_most_suitable_people equal_to \" go with friends \" ( restaurant ) cuisine equal_to \" Jiangsu Zhejiang Cuisine \" , name equal_to \" Songhelou Restaurant \" , pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) recommend name equal_to \" Songhelou Restaurant \" AGENT_ACTS: ( restaurant ) inform phone_number equal_to \" 0512-67700688 \" USER: What time does it close? <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , name equal_to \" Guanqian Street \" , the_most_suitable_people equal_to \" go with friends \" ( restaurant ) cuisine equal_to \" Jiangsu Zhejiang Cuisine \" , name equal_to \" Songhelou Restaurant \" , pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) inform phone_number equal_to \" 0512-67700688 \" AGENT_ACTS: ( restaurant ) inform business_hours equal_to \" 11:00–13:30 and 17:00–20:30, Monday to Sunday \" USER: That gives me enough time to get there. Thank you for your help, bye. <endofhistory>",
    "output": "( attraction ) area equal_to \" Gusu District \" , name equal_to \" Guanqian Street \" , the_most_suitable_people equal_to \" go with friends \" ( restaurant ) cuisine equal_to \" Jiangsu Zhejiang Cuisine \" , name equal_to \" Songhelou Restaurant \" , pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Gusu District \" , the_most_suitable_people equal_to \" friends \" , name equal_to \" Guanqian Street \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm in Suzhou on business and I'd like to visit some attractions while I'm here. Can you please recommend a slightly more expensive one? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Zhouzhuang Town \" USER: I want to go to an amusement park. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Zhouzhuang Town \" AGENT_ACTS: ( attraction ) recommend name equal_to \" Suzhou Amusement Land Forest and Water World \" USER: OK, what's the address? I want to check how to get there. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Suzhou Amusement Land Forest and Water World \" AGENT_ACTS: ( attraction ) inform address equal_to \" the east of Yanghan East Road and the west of Shanshenwan Road, Suzhou New District, Suzhou City \" USER: Can I get there directly by subway? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , type equal_to \" amusement park \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" the east of Yanghan East Road and the west of Shanshenwan Road, Suzhou New District, Suzhou City \" AGENT_ACTS: ( attraction ) inform metro_station equal_to \" false \" USER: That's OK. I can take a taxi there. Can you also help me find a mid-priced restaurant? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , type equal_to \" amusement park \" ( restaurant ) pricerange equal_to \" mid \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform metro_station equal_to \" false \" AGENT_ACTS: ( restaurant ) recommend name equal_to \" HOU GA FEI \" USER: I've been craving hot pot recently. Find me a hot pot restaurant. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , type equal_to \" amusement park \" ( restaurant ) cuisine equal_to \" hot pot \" , pricerange equal_to \" mid \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) recommend name equal_to \" HOU GA FEI \" AGENT_ACTS: ( restaurant ) recommend name equal_to \" Sichuan Xiang Tian Xia Hot Pot \" USER: Is the average spend in the hot pot restaurant high? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , type equal_to \" amusement park \" ( restaurant ) cuisine equal_to \" hot pot \" , name equal_to \" Sichuan Xiang Tian Xia Hot Pot \" , pricerange equal_to \" mid \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) recommend name equal_to \" Sichuan Xiang Tian Xia Hot Pot \" AGENT_ACTS: ( restaurant ) inform per_capita_consumption equal_to \" 97 yuan \" USER: Good, please tell me its phone number. I want to make a reservation. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , type equal_to \" amusement park \" ( restaurant ) cuisine equal_to \" hot pot \" , name equal_to \" Sichuan Xiang Tian Xia Hot Pot \" , pricerange equal_to \" mid \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) inform per_capita_consumption equal_to \" 97 yuan \" AGENT_ACTS: ( restaurant ) inform phone_number equal_to \" 0512-66171777 \" USER: OK, thank you very much, bye. <endofhistory>",
    "output": "( attraction ) consumption equal_to \" slightly more expensive \" , name equal_to \" Suzhou Amusement Land Forest Waterworld \" , type equal_to \" amusement park \" ( restaurant ) cuisine equal_to \" hot pot \" , name equal_to \" Sichuan Xiang Tian Xia Hot Pot \" , pricerange equal_to \" mid \"",
    "prediction": "( attraction ) type equal_to \" amusement park \" , consumption equal_to \" slightly expensive \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, please help me find a cheap place where I could go to have some fun, preferably in Suzhou New District. That's close to my home. <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \"",
    "prediction": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Suzhou Taihu Lake Wetland Park \" USER: Is its rating high? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" , name equal_to \" Taihu Lake Wetland Park \"",
    "prediction": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) recommend name equal_to \" Suzhou Taihu Lake Wetland Park \" AGENT_ACTS: ( attraction ) inform score equal_to \" 4.5 \" USER: That's good. I'll give it a try. Please help me check the address. <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" , name equal_to \" Taihu Lake Wetland Park \"",
    "prediction": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform score equal_to \" 4.5 \" AGENT_ACTS: ( attraction ) inform address equal_to \" No. 1, Town Lake Embroidery Street, Suzhou New District, Suzhou City \" USER: I'm also looking for a slightly more expensive restaurant nearby. <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" , name equal_to \" Taihu Lake Wetland Park \" ( restaurant ) pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" <endofstate> <history> AGENT_ACTS_PREV: ( attraction ) inform address equal_to \" No. 1, Town Lake Embroidery Street, Suzhou New District, Suzhou City \" AGENT_ACTS: ( restaurant ) recommend name equal_to \" Zhiwei Japanese Restaurant \" USER: I've never had Japanese food. I'd like to give it a try. What's the average spend? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" , name equal_to \" Taihu Lake Wetland Park \" ( restaurant ) name equal_to \" Zhiwei Japanese Restaurant \" , pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) recommend name equal_to \" Zhiwei Japanese Restaurant \" AGENT_ACTS: ( restaurant ) inform per_capita_consumption equal_to \" 215 yuan \" USER: That's really expensive, but still acceptable. Can I get there by subway? <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" , name equal_to \" Taihu Lake Wetland Park \" ( restaurant ) name equal_to \" Zhiwei Japanese Restaurant \" , pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" <endofstate> <history> AGENT_ACTS_PREV: ( restaurant ) inform per_capita_consumption equal_to \" 215 yuan \" AGENT_ACTS: ( restaurant ) inform metro_station equal_to \" false \" USER: That's not a problem as long as the food is good. Thank you very much. Goodbye! <endofhistory>",
    "output": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \" , name equal_to \" Taihu Lake Wetland Park \" ( restaurant ) name equal_to \" Zhiwei Japanese Restaurant \" , pricerange equal_to \" slightly more expensive \"",
    "prediction": "( attraction ) area equal_to \" Suzhou New District \" , consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm coming to Suzhou on business. I have some free time and want to visit a Suzhou-styled garden. Can you please recommend a cheap one? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" cheap \" , type equal_to \" Suzhou-styled garden \"",
    "prediction": "( attraction ) type equal_to \" Suzhou-style garden \" , consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( attraction ) type equal_to \" Suzhou-style garden \" , consumption equal_to \" cheap \" <endofstate> <history> AGENT_ACTS: ( attraction ) recommend name equal_to \" Lion Forest Garden \" USER: OK, can I get there by subway? <endofhistory>",
    "output": "( attraction ) consumption equal_to \" cheap \" , name equal_to \" Lion Forest Garden \" , type equal_to \" Suzhou-styled garden \"",
    "prediction": "( attraction ) type equal_to \" Suzhou-style garden \" , consumption equal_to \" cheap \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: I'm going on a trip. Please help me check the high-speed trains to Shanghai. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , destination equal_to \" Shanghai \"",
    "prediction": "The provided information does not include any slots that need to be normalized to a specific value from a list of possible values. The term \"high-speed trains\" does not correspond to a specific slot value for the domain \"train\" as provided in the initial instructions. The destination \"Shanghai\" is already correctly formatted and does not require normalization. Therefore, no changes are necessary to the belief state based on the provided slots."
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided information does not include any slots that need to be normalized to a specific value from a list of possible values. The term \"high-speed trains\" does not correspond to a specific slot value for the domain \"train\" as provided in the initial instructions. The destination \"Shanghai\" is already correctly formatted and does not require normalization. Therefore, no changes are necessary to the belief state based on the provided slots. <endofstate> <history> AGENT_ACTS: ( train ) inform train_number equal_to \" G7185 \" , departure_time equal_to \" 09:32 that day \" , arrival_time equal_to \" 10:41 that day \" USER: I will depart from Nanjing. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \"",
    "prediction": "( train ) departure equal_to \" Nanjing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) departure equal_to \" Nanjing \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" G7185 \" , departure_time equal_to \" 09:32 that day \" , arrival_time equal_to \" 10:41 that day \" AGENT_ACTS: ( train ) inform destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" high-speed \" , seat_type equal_to \" first class \" , ticket_price equal_to \" 229.5 yuan \" , duration equal_to \" 1 hour and 9 minutes \" USER: I plan to leave next Saturday afternoon. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \"",
    "prediction": "Your request does not contain any slots that need to be normalized to a specific value from a given list. The information provided is already in a clear format. If you have any other details that need to be normalized or any other requests, please provide them."
  },
  {
    "instruction": "",
    "input": "DST: <state> Your request does not contain any slots that need to be normalized to a specific value from a given list. The information provided is already in a clear format. If you have any other details that need to be normalized or any other requests, please provide them. <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" high-speed \" , seat_type equal_to \" first class \" , ticket_price equal_to \" 229.5 yuan \" , duration equal_to \" 1 hour and 9 minutes \" AGENT_ACTS: ( train ) inform train_number equal_to \" G7019 \" , departure_time equal_to \" 16:00 that day \" , arrival_time equal_to \" 17:40 that day \" USER: Second class is fine. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" , seat_type equal_to \" second class \"",
    "prediction": "( train ) destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" high-speed \" , seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" high-speed \" , seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" G7019 \" , departure_time equal_to \" 16:00 that day \" , arrival_time equal_to \" 17:40 that day \" AGENT_ACTS: ( train ) inform ticket_price equal_to \" 139.5 yuan \" , duration equal_to \" 1 hour and 40 minutes \" USER: How much is a second class ticket? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" , seat_type equal_to \" second class ticket \"",
    "prediction": "( train ) destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" high-speed \" , seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" high-speed \" , seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform ticket_price equal_to \" 139.5 yuan \" , duration equal_to \" 1 hour and 40 minutes \" AGENT_ACTS: ( train ) inform ticket_price equal_to \" 139.5 yuan \" USER: Is there any bullet train? Please tell me the train service information. <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" , seat_type equal_to \" second class ticket \"",
    "prediction": "( train ) destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" bullet train \" , seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" bullet train \" , seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform ticket_price equal_to \" 139.5 yuan \" AGENT_ACTS: ( train ) inform train_number equal_to \" D951 from Nanjingnan to Shanghai \" , departure_time equal_to \" 18:40 that day \" , arrival_time equal_to \" 20:27 that day \" , duration equal_to \" 1 hour and 47 minutes \" , ticket_price equal_to \" 115.0 yuan \" USER: How much is a first class ticket on this train? I want to compare the two. <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" , seat_type equal_to \" A first class \"",
    "prediction": "( train ) destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" bullet train \" , seat_type equal_to \" first class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" bullet train \" , seat_type equal_to \" first class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" D951 from Nanjingnan to Shanghai \" , departure_time equal_to \" 18:40 that day \" , arrival_time equal_to \" 20:27 that day \" , duration equal_to \" 1 hour and 47 minutes \" , ticket_price equal_to \" 115.0 yuan \" AGENT_ACTS: ( train ) inform ticket_price equal_to \" 184.0 yuan \" USER: OK, I'm going to book a ticket. Thank you, bye. <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" , seat_type equal_to \" A first class \"",
    "prediction": "( train ) destination equal_to \" Shanghai \" , date equal_to \" next Monday morning \" , classification equal_to \" bullet train \" , seat_type equal_to \" first class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, please help me check if there are any high-speed trains from Shenzhen to Hangzhou next Thursday morning. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , date equal_to \" next Thursday morning \" , departure equal_to \" Shenzhen \" , destination equal_to \" Hangzhou \"",
    "prediction": "The provided belief state does not include a slot for \"classification\" of trains, such as \"high-speed trains.\" The slots available for normalization in the train domain are \"seat type.\" Since \"classification\" is not a slot that can be normalized based on the given instructions, the belief state remains unchanged for that part. However, the other information provided does not require normalization as they are not part of the slots that need to be normalized. Here is the belief state with the information given:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided belief state does not include a slot for \"classification\" of trains, such as \"high-speed trains.\" The slots available for normalization in the train domain are \"seat type.\" Since \"classification\" is not a slot that can be normalized based on the given instructions, the belief state remains unchanged for that part. However, the other information provided does not require normalization as they are not part of the slots that need to be normalized. Here is the belief state with the information given: <endofstate> <history> AGENT_ACTS: ( train ) inform train_number equal_to \" G1604 from Shenzhenbei to Hangzhoudong \" USER: How much is a first class ticket? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , date equal_to \" next Thursday morning \" , departure equal_to \" Shenzhen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" A first class \"",
    "prediction": "( train ) seat_type equal_to \" first class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" first class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" G1604 from Shenzhenbei to Hangzhoudong \" AGENT_ACTS: ( train ) inform ticket_price equal_to \" 975.5 yuan \" USER: A first class ticket is a little expensive. What about a second class ticket? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , date equal_to \" next Thursday morning \" , departure equal_to \" Shenzhen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" second class ticket \"",
    "prediction": "( train ) seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform ticket_price equal_to \" 975.5 yuan \" AGENT_ACTS: ( train ) inform ticket_price equal_to \" 975.5 yuan \" USER: Okay. What time does the train depart? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , date equal_to \" next Thursday morning \" , departure equal_to \" Shenzhen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" second class ticket \"",
    "prediction": "( train ) seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform ticket_price equal_to \" 599.0 yuan \" AGENT_ACTS: ( train ) inform departure_time equal_to \" 11:01 that day \" USER: Does it arrive in Hangzhou at a late hour? What's the arrival time? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , date equal_to \" next Thursday morning \" , departure equal_to \" Shenzhen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" second class ticket \"",
    "prediction": "( train ) seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform departure_time equal_to \" 11:01 that day \" AGENT_ACTS: ( train ) inform arrival_time equal_to \" 20:57 that day \" USER: Sure. Thank you for the information. Goodbye. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed trains \" , date equal_to \" next Thursday morning \" , departure equal_to \" Shenzhen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" second class ticket \"",
    "prediction": "( train ) seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I want to take a trip to Nanjing. Is there any bullet train from Xiamen to Nanjing next Sunday afternoon? <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Sunday afternoon \" , departure equal_to \" Xiamen \" , destination equal_to \" Nanjing \"",
    "prediction": "The provided information does not include any slots that need to be normalized to a specific value from a list of possible values. The terms \"bullet train,\" \"next Sunday afternoon,\" \"Xiamen,\" and \"Nanjing\" are already in a descriptive form and do not have a specified normalization in the context given. Therefore, the belief state remains unchanged:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided information does not include any slots that need to be normalized to a specific value from a list of possible values. The terms \"bullet train,\" \"next Sunday afternoon,\" \"Xiamen,\" and \"Nanjing\" are already in a descriptive form and do not have a specified normalization in the context given. Therefore, the belief state remains unchanged: <endofstate> <history> AGENT_ACTS: ( train ) inform train_number equal_to \" D2282 from Xiamenbei to Nanjing \" USER: I'd like a comfortable seat. How much is a first class ticket? <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Sunday afternoon \" , departure equal_to \" Xiamen \" , destination equal_to \" Nanjing \" , seat_type equal_to \" A first class \"",
    "prediction": "( train ) seat_type equal_to \" first class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" first class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" D2282 from Xiamenbei to Nanjing \" AGENT_ACTS: ( train ) inform ticket_price equal_to \" 826.0 yuan \" USER: Is there any high-speed train that day? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Sunday afternoon \" , departure equal_to \" Xiamen \" , destination equal_to \" Nanjing \"",
    "prediction": "( train ) seat_type equal_to \" first class \" , classification equal_to \" high-speed train \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" first class \" , classification equal_to \" high-speed train \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform ticket_price equal_to \" 826.0 yuan \" AGENT_ACTS: ( train ) inform train_number equal_to \" G1662 from Xiamenbei to Nanjingnan \" USER: How much is a second class ticket for the high-speed train? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Sunday afternoon \" , departure equal_to \" Xiamen \" , destination equal_to \" Nanjing \" , seat_type equal_to \" second class ticket \"",
    "prediction": "( train ) seat_type equal_to \" second class \" , classification equal_to \" high-speed train \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" second class \" , classification equal_to \" high-speed train \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" G1662 from Xiamenbei to Nanjingnan \" AGENT_ACTS: ( train ) inform ticket_price equal_to \" 499.5 yuan \" USER: Got it. Thanks, bye. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Sunday afternoon \" , departure equal_to \" Xiamen \" , destination equal_to \" Nanjing \" , seat_type equal_to \" second class ticket \"",
    "prediction": "( train ) seat_type equal_to \" second class \" , classification equal_to \" high-speed train \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, my family and I are going on a trip to Xiamen from Shanghai next Monday afternoon. We'd like to travel second class on a high-speed train. Which train can we take? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \"",
    "prediction": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS: ( train ) inform train_number equal_to \" G1659 from Shanghai Hongqiao to Xiamen \" USER: Okay. What time does it depart from Shanghai? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \"",
    "prediction": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" G1659 from Shanghai Hongqiao to Xiamen \" AGENT_ACTS: ( train ) inform departure_time equal_to \" 12:57 that day \" USER: What time does it arrive in Xiamen? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \"",
    "prediction": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform departure_time equal_to \" 12:57 that day \" AGENT_ACTS: ( train ) inform arrival_time equal_to \" 18:42 that day \" USER: How long does the journey take? Do I need to bring something to eat? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \"",
    "prediction": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \" , departure_time equal_to \" 12:57 \" , arrival_time equal_to \" 18:42 \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday afternoon \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \" , departure_time equal_to \" 12:57 \" , arrival_time equal_to \" 18:42 \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform arrival_time equal_to \" 18:42 that day \" AGENT_ACTS: ( train ) inform duration equal_to \" 5 hours and 45 minutes \" USER: Okay. Is there any high-speed train next Monday morning? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday morning \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \"",
    "prediction": "The provided belief state does not include any slots that need to be normalized to the predefined values for the domain \"train\". The slot \"classification\" does not match any of the predefined slots for normalization, and the other information provided (date, departure, destination) does not require normalization based on the given context. Therefore, the belief state remains unchanged:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided belief state does not include any slots that need to be normalized to the predefined values for the domain \"train\". The slot \"classification\" does not match any of the predefined slots for normalization, and the other information provided (date, departure, destination) does not require normalization based on the given context. Therefore, the belief state remains unchanged: <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform duration equal_to \" 5 hours and 45 minutes \" AGENT_ACTS: ( train ) inform train_number equal_to \" G1653 \" , departure_time equal_to \" 08:15 that day \" , arrival_time equal_to \" 13:31 that day \" USER: Well, what time does it depart? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday morning \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \"",
    "prediction": "Your instruction does not include any slot that requires normalization based on the provided options. The departure time \"08:15 that day\" is already specific and does not match any of the slots that have specified normalization values. Therefore, no changes are necessary."
  },
  {
    "instruction": "",
    "input": "DST: <state> Your instruction does not include any slot that requires normalization based on the provided options. The departure time \"08:15 that day\" is already specific and does not match any of the slots that have specified normalization values. Therefore, no changes are necessary. <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" G1653 \" , departure_time equal_to \" 08:15 that day \" , arrival_time equal_to \" 13:31 that day \" AGENT_ACTS: ( train ) inform departure_time equal_to \" 08:15 that day \" USER: What time does it arrive in Xiamen? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday morning \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \"",
    "prediction": "I apologize for any confusion. It seems there was a misunderstanding. If you have any further questions or need assistance with a different query, please let me know, and I'll be happy to help."
  },
  {
    "instruction": "",
    "input": "DST: <state> I apologize for any confusion. It seems there was a misunderstanding. If you have any further questions or need assistance with a different query, please let me know, and I'll be happy to help. <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform departure_time equal_to \" 08:15 that day \" AGENT_ACTS: ( train ) inform arrival_time equal_to \" 13:31 that day \" USER: Okay. No further questions. Thank you for your service. Goodbye! <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday morning \" , departure equal_to \" Shanghai \" , destination equal_to \" Xiamen \" , seat_type equal_to \" second class \"",
    "prediction": "The provided information does not include any slots that need to be normalized to a predefined set of values. The departure and arrival times are specific to the scenario and do not have a normalization requirement based on the examples provided. Therefore, the belief state remains unchanged:"
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I live in Beijing and want to take a trip to Hangzhou. Can you please recommend a flight next Wednesday? <endofhistory>",
    "output": "( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" <endofstate> <history> AGENT_ACTS: ( flight ) recommend flight_information equal_to \" MU5132 of China Eastern Airlines from Terminal 2 of Beijing Capital International Airport to Terminal 3 of Xiaoshan International Airport \" USER: What time does it arrive in Hangzhou? <endofhistory>",
    "output": "( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) recommend flight_information equal_to \" MU5132 of China Eastern Airlines from Terminal 2 of Beijing Capital International Airport to Terminal 3 of Xiaoshan International Airport \" AGENT_ACTS: ( flight ) inform arrival_time equal_to \" 13:30 that day \" USER: Well, is there a risk it might be delayed? <endofhistory>",
    "output": "( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform arrival_time equal_to \" 13:30 that day \" AGENT_ACTS: ( flight ) inform punctuality_rate equal_to \" 96.61% \" USER: Well, how much is the ticket? Are there any business class tickets? I'd like to fly business class, it's just a lot more comfortable. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Wednesday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform punctuality_rate equal_to \" 96.61% \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 1590 yuan \" USER: Got it. Can you help me check flights from Beijing to Hangzhou next Sunday? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 1590 yuan \" AGENT_ACTS: ( flight ) inform flight_information equal_to \" MU5132 of China Eastern Airlines from Terminal 2 of Beijing Capital International Airport to Terminal 3 of Xiaoshan International Airport \" USER: Well, what time does the flight take off from Beijing? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" MU5132 of China Eastern Airlines from Terminal 2 of Beijing Capital International Airport to Terminal 3 of Xiaoshan International Airport \" AGENT_ACTS: ( flight ) inform departure_time equal_to \" 11:10 that day \" USER: Well, does it arrive in Hangzhou at 1 pm? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" , arrival_time equal_to \" 1 pm \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" , arrival_time equal_to \" 1 pm \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform departure_time equal_to \" 11:10 that day \" AGENT_ACTS: ( flight ) confirm arrival_time equal_to \" 13:30 that day \" USER: OK, can you please repeat the flight information? I'll write it down. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" , departure_time equal_to \" 11:10 that day \" , arrival_time equal_to \" 13:30 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" , departure_time equal_to \" 11:10 that day \" , arrival_time equal_to \" 13:30 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) confirm arrival_time equal_to \" 13:30 that day \" AGENT_ACTS: ( flight ) inform flight_information equal_to \" MU5132 of China Eastern Airlines, from Terminal 2 of Beijing Capital International Airport to Terminal 3 of Xiaoshan International Airport, departure at 11:10 and arrival at 13:30 next Sunday \" USER: OK, got it. Thanks, goodbye! <endofhistory>",
    "output": "( flight ) arrival_time equal_to \" 1 pm \" , class_cabin equal_to \" A business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing Capital International Airport \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Sunday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" , departure_time equal_to \" 11:10 that day \" , arrival_time equal_to \" 13:30 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Is there any flight from Chengdu to Xiamen? For next Friday. <endofhistory>",
    "output": "( flight ) date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Xiamen \"",
    "prediction": "( flight ) date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Xiamen \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Xiamen \" <endofstate> <history> AGENT_ACTS: ( flight ) inform flight_information equal_to \" 3U8937 of Sichuan Airlines from Terminal 1 of Shuangliu International Airport to Terminal 4 of Gaoqi International Airport \" USER: Business class. How much is a ticket? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Xiamen \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Xiamen \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Xiamen \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" 3U8937 of Sichuan Airlines from Terminal 1 of Shuangliu International Airport to Terminal 4 of Gaoqi International Airport \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 1450 yuan \" USER: Are there any flights from Chengdu to Shenzhen? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shenzhen \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shenzhen \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shenzhen \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 1450 yuan \" AGENT_ACTS: ( flight ) inform flight_information equal_to \" CA4325 of Air China, from Terminal 2 of Shuangliu International Airport to Terminal 3 of Bao'an International Airport \" USER: How much is a business class ticket? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shenzhen \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shenzhen \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shenzhen \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" CA4325 of Air China, from Terminal 2 of Shuangliu International Airport to Terminal 3 of Bao'an International Airport \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 1950 yuan \" USER: Thank you, bye-bye. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shenzhen \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Friday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shenzhen \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going to Beijing next week. Please help me check if there is any direct flight from Xiamen to Beijing next Thursday. <endofhistory>",
    "output": "( flight ) date equal_to \" Next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS: ( flight ) inform flight_information equal_to \" CZ5036 of China Southern Airlines from Terminal 3 of Xiamen Gaoqi International Airport to Terminal 2 of Beijing Capital International Airport \" USER: How much is a ticket? In business class. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" Next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" CZ5036 of China Southern Airlines from Terminal 3 of Xiamen Gaoqi International Airport to Terminal 2 of Beijing Capital International Airport \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 8800 yuan \" USER: Wow, that's so expensive. What about economy class? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" Next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 8800 yuan \"an \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 8800 yuan \"an \" USER: Well, what time does the flight take off? <endofhistory>",
    "output": "( flight ) date equal_to \" Next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 1260 yuan \" AGENT_ACTS: ( flight ) inform departure_time equal_to \" 11:00 that day \" USER: Well, the time suits me. What time does it arrive in Beijing? <endofhistory>",
    "output": "( flight ) date equal_to \" Next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \" , departure_time equal_to \" 11:00 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \" , departure_time equal_to \" 11:00 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform departure_time equal_to \" 11:00 that day \" AGENT_ACTS: ( flight ) inform arrival_time equal_to \" 14:00 that day \" USER: Okay, thank you very much, bye. <endofhistory>",
    "output": "( flight ) date equal_to \" Next Thursday \" , departure equal_to \" Gaoqi International Airport \" , destination equal_to \" Beijing Capital International Airport \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Thursday \" , departure equal_to \" Xiamen \" , destination equal_to \" Beijing \" , departure_time equal_to \" 11:00 that day \" , arrival_time equal_to \" 14:00 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going on a trip. Please help me check the flights from Beijing to Hangzhou next Monday. <endofhistory>",
    "output": "( flight ) date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" <endofstate> <history> AGENT_ACTS: ( flight ) inform flight_information equal_to \" MU5132 of China Eastern Airlines from Terminal 2 of Beijing Capital International Airport to Terminal 3 of Xiaoshan International Airport \" USER: I'd like economy class. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" MU5132 of China Eastern Airlines from Terminal 2 of Beijing Capital International Airport to Terminal 3 of Xiaoshan International Airport \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 540 yuan \" , departure_time equal_to \" 11:10 that day \" , arrival_time equal_to \" 13:30 that day \" USER: How much is a ticket? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 540 yuan \" , departure_time equal_to \" 11:10 that day \" , arrival_time equal_to \" 13:30 that day \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 540 yuan \" USER: Can you please help me check the ticket price for a flight to Xiamen? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Xiamen \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Xiamen \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Xiamen \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 540 yuan \"AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 540 yuan \"USER: Thank you so much for your advice, bye! <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Xiamen \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Xiamen \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Xiamen \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 1260 yuan \" AGENT_ACTS: ( general ) bye USER: Goodbye. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Xiamen \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Beijing \" , destination equal_to \" Xiamen \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going from Guangzhou to Beijing for a meeting next Saturday and I want to fly business class. Is there any suitable flight? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" Business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS: ( flight ) inform flight_information equal_to \" CA1310 of Air China, from Baiyun International Airport Terminal 1 to Beijing Capital International Airport Terminal 3 \" USER: How much is a business class ticket? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" CA1310 of Air China, from Baiyun International Airport Terminal 1 to Beijing Capital International Airport Terminal 3 \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 2640 yuan \" USER: Okay. What time does it take off? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 2640 yuan \" AGENT_ACTS: ( flight ) inform departure_time equal_to \" 08:10 that day \" USER: What time does it arrive in Beijing? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" , departure_time equal_to \" 08:10 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" , departure_time equal_to \" 08:10 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform departure_time equal_to \" 08:10 that day \" AGENT_ACTS: ( flight ) inform arrival_time equal_to \" 11:05 that day \" USER: How's the punctuality rate of this flight? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" , departure_time equal_to \" 08:10 that day \" , arrival_time equal_to \" 11:05 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" , departure_time equal_to \" 08:10 that day \" , arrival_time equal_to \" 11:05 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform arrival_time equal_to \" 11:05 that day \" AGENT_ACTS: ( flight ) inform punctuality_rate equal_to \" 100% \" USER: Okay. No further questions. Thank you for your service. Goodbye! <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Saturday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" , departure_time equal_to \" 08:10 that day \" , arrival_time equal_to \" 11:05 that day \" , punctuality_rate equal_to \" 100% \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going from Chengdu to Nanjing for a meeting next Wednesday and I'd like to fly economy class. Can you tell me which flight I can take? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \" <endofstate> <history> AGENT_ACTS: ( flight ) inform flight_information equal_to \" 3U8993 of Sichuan Airlines, from Shuangliu International Airport Terminal 1 to Lukou International Airport Terminal 2 \" USER: How much is an economy class ticket? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" 3U8993 of Sichuan Airlines, from Shuangliu International Airport Terminal 1 to Lukou International Airport Terminal 2 \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 790 yuan \" USER: What time does it take off? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 790 yuan \" AGENT_ACTS: ( flight ) inform departure_time equal_to \" 15:35 that day \" USER: How's the punctuality rate? I'm worried it will be delayed. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \" , departure_time equal_to \" 15:35 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \" , departure_time equal_to \" 15:35 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform departure_time equal_to \" 15:35 that day \" AGENT_ACTS: ( flight ) inform punctuality_rate equal_to \" 98.32% \" USER: Got it. Thanks, bye. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Shuangliu International Airport Terminal 1 \" , destination equal_to \" Nanjing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \" , departure_time equal_to \" 15:35 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going to travel from Chengdu to Shanghai next Monday. Please recommend a flight, I want to fly business class. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" Business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shanghai \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shanghai \" <endofstate> <history> AGENT_ACTS: ( flight ) recommend flight_information equal_to \" 3U8963 of Sichuan Airlines, business class from Chengdu Shuangliu International Airport to Shanghai Pudong International Airport \" USER: How much is a ticket? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" Business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shanghai \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Shanghai \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) recommend flight_information equal_to \" 3U8963 of Sichuan Airlines, business class from Chengdu Shuangliu International Airport to Shanghai Pudong International Airport \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 1730 yuan \" USER: Can you help me check if there is a flight to Nanjing? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" Business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 1730 yuan \" AGENT_ACTS: ( flight ) inform flight_information equal_to \" 3U8993 of Sichuan Airlines, from Shuangliu International Airport Terminal 1 to Lukou International Airport Terminal 2 \" USER: How much is a ticket for this flight? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" Business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" 3U8993 of Sichuan Airlines, from Shuangliu International Airport Terminal 1 to Lukou International Airport Terminal 2 \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 1170 yuan \" USER: I got it. Thanks, bye. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" Business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Nanjing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going from Nanjing to Shanghai next Friday and I'd like to fly economy class. Which flight can I take? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" <endofstate> <history> AGENT_ACTS: ( flight ) inform flight_information equal_to \" MU2881 of China Eastern Airlines from Lukou International Airport Terminal 2 to Pudong International Airport Terminal 1 \" USER: OK, what time does it take off? I'll go to the airport early. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" MU2881 of China Eastern Airlines from Lukou International Airport Terminal 2 to Pudong International Airport Terminal 1 \" AGENT_ACTS: ( flight ) inform departure_time equal_to \" 07:25 that day \" USER: OK, what time does it arrive in Shanghai? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 07:25 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 07:25 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform departure_time equal_to \" 07:25 that day \" AGENT_ACTS: ( flight ) inform arrival_time equal_to \" 08:25 that day \" USER: Will it arrive on time? I hate when flights are delayed. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 07:25 that day \" , punctuality_rate equal_to \" on time \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 07:25 that day \" , punctuality_rate equal_to \" on time \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform arrival_time equal_to \" 08:25 that day \" AGENT_ACTS: ( flight ) inform punctuality_rate equal_to \" 97% \" USER: Okay. No further questions. Thank you for your service. Goodbye! <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Friday \" , departure equal_to \" Nanjing \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 07:25 that day \" , punctuality_rate equal_to \" 97% \" , arrival_time equal_to \" 08:25 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going from Guangzhou to Beijing on business next Tuesday and I'd like to fly business class. Which flight can I take? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" Business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS: ( flight ) recommend flight_information equal_to \" CA1310 of Air China, from Baiyun International Airport Terminal 1 to Beijing Capital International Airport Terminal 3 \" USER: How much is a business class ticket? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) recommend flight_information equal_to \" CA1310 of Air China, from Baiyun International Airport Terminal 1 to Beijing Capital International Airport Terminal 3 \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 2640 yuan \" USER: Please tell me the flight's departure and arrival time. I'm going to book a car to pick me up. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 2640 yuan \" AGENT_ACTS: ( flight ) inform departure_time equal_to \" 08:10 that day \" , arrival_time equal_to \" 11:05 that day \" USER: How is the flight's punctuality rate? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" , departure_time equal_to \" 08:10 that day \" , arrival_time equal_to \" 11:05 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" , departure_time equal_to \" 08:10 that day \" , arrival_time equal_to \" 11:05 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform departure_time equal_to \" 08:10 that day \" , arrival_time equal_to \" 11:05 that day \" AGENT_ACTS: ( flight ) inform punctuality_rate equal_to \" 100% \" USER: Got it, thank you, bye. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Baiyun International Airport Terminal 1 \" , destination equal_to \" Beijing Capital International Airport Terminal 3 \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Guangzhou \" , destination equal_to \" Beijing \" , departure_time equal_to \" 08:10 that day \" , arrival_time equal_to \" 11:05 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Is there any flight from Shanghai to Beijing next Tuesday? <endofhistory>",
    "output": "( flight ) date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS: ( flight ) inform flight_information equal_to \" MU5101 of China Eastern Airlines from Terminal 2 of Hongqiao International Airport to Terminal 2 of Beijing Capital International Airport \" USER: I'd like a business class ticket. How much is it? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" MU5101 of China Eastern Airlines from Terminal 2 of Hongqiao International Airport to Terminal 2 of Beijing Capital International Airport \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 2360 yuan \" USER: Does it arrive in Beijing at around lunchtime? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 2360 yuan \" AGENT_ACTS: ( flight ) inform arrival_time equal_to \" 10:15 that day \" USER: OK, can you tell me the flight information? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform arrival_time equal_to \" 10:15 that day \" AGENT_ACTS: ( flight ) inform flight_information equal_to \" MU5101 of China Eastern Airlines from Terminal 2 of Hongqiao International Airport to Terminal 2 of Beijing Capital International Airport \" USER: How is the punctuality rate? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" MU5101 of China Eastern Airlines from Terminal 2 of Hongqiao International Airport to Terminal 2 of Beijing Capital International Airport \" AGENT_ACTS: ( flight ) inform punctuality_rate equal_to \" 100% \" USER: Thank you very much, see you. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Tuesday \" , departure equal_to \" Shanghai \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: My company is sending me on a business trip next Monday. Please recommend a flight from Chengdu to Beijing. I'd like an economy class ticket. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS: ( flight ) recommend flight_information equal_to \" 3U8885 of Sichuan Airlines, from Shuangliu International Airport Terminal 1 to Beijing Capital International Airport Terminal 3 \" USER: Sichuan Airlines is OK. What time does it take off? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) recommend flight_information equal_to \" 3U8885 of Sichuan Airlines, from Shuangliu International Airport Terminal 1 to Beijing Capital International Airport Terminal 3 \" AGENT_ACTS: ( flight ) inform departure_time equal_to \" 11:30 that day \" USER: The time is good. How much is an economy class ticket? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , departure_time equal_to \" 11:30 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , departure_time equal_to \" 11:30 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform departure_time equal_to \" 11:30 that day \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 820 yuan \" USER: How is the punctuality rate? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , departure_time equal_to \" 11:30 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , departure_time equal_to \" 11:30 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 820 yuan \" AGENT_ACTS: ( flight ) inform punctuality_rate equal_to \" 96.61% \" USER: OK, got it. Thanks, goodbye. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Monday \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , departure_time equal_to \" 11:30 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going to Shanghai on business next Wednesday. Please help me check flights taking off from Xiamen. <endofhistory>",
    "output": "( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" <endofstate> <history> AGENT_ACTS: ( flight ) inform flight_information equal_to \" CZ5836 of China Southern Airlines, from Gaoqi International Airport Terminal 3 to Hongqiao International Airport Terminal 1 \" USER: I'd like economy class. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform flight_information equal_to \" CZ5836 of China Southern Airlines, from Gaoqi International Airport Terminal 3 to Hongqiao International Airport Terminal 1 \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 900 yuan \" , departure_time equal_to \" 13:00 that day \" , arrival_time equal_to \" 15:00 that day \" USER: What time does it arrive? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" , arrival_time equal_to \" 15:00 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" , arrival_time equal_to \" 15:00 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 900 yuan \" , departure_time equal_to \" 13:00 that day \" , arrival_time equal_to \" 15:00 that day \" AGENT_ACTS: ( flight ) inform arrival_time equal_to \" 15:00 that day \" USER: What time does it take off? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 13:00 that day \" , arrival_time equal_to \" 15:00 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 13:00 that day \" , arrival_time equal_to \" 15:00 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform arrival_time equal_to \" 15:00 that day \" AGENT_ACTS: ( flight ) inform departure_time equal_to \" 13:00 that day \" USER: How is the punctuality rate? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 13:00 that day \" , arrival_time equal_to \" 15:00 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 13:00 that day \" , arrival_time equal_to \" 15:00 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform departure_time equal_to \" 13:00 that day \" AGENT_ACTS: ( flight ) inform punctuality_rate equal_to \" 100% \" USER: Thank you so much for your advice, bye! <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 13:00 that day \" , arrival_time equal_to \" 15:00 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 13:00 that day \" , arrival_time equal_to \" 15:00 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform punctuality_rate equal_to \" 100% \" AGENT_ACTS: ( general ) bye USER: Goodbye. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \"",
    "prediction": "( flight ) class_cabin equal_to \" economy class \" , date equal_to \" next Wednesday \" , departure equal_to \" Xiamen \" , destination equal_to \" Shanghai \" , departure_time equal_to \" 13:00 that day \" , arrival_time equal_to \" 15:00 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: I've had a lot of spare time recently and want to travel, but I haven't decided where to go. I want to check the price of the flights before I decide. Can you help me check if there are any flights from Beijing to Guangzhou next Thursday? I'd like a business class ticket. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" Next Thursday \" , departure equal_to \" Beijing \" , destination equal_to \" Guangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Thursday \" , departure equal_to \" Beijing \" , destination equal_to \" Guangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Thursday \" , departure equal_to \" Beijing \" , destination equal_to \" Guangzhou \" <endofstate> <history> AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 1800 yuan \" USER: I know that flight. How much is a business class ticket? <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" Next Thursday \" , departure equal_to \" Beijing \" , destination equal_to \" Guangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Thursday \" , departure equal_to \" Beijing \" , destination equal_to \" Guangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Thursday \" , departure equal_to \" Beijing \" , destination equal_to \" Guangzhou \" <endofstate> <history> AGENT_ACTS_PREV: ( flight ) inform ticket_price equal_to \" 1800 yuan \" AGENT_ACTS: ( flight ) inform ticket_price equal_to \" 1800 yuan \" USER: Got it. And please help me check flights to Hangzhou that day. I've always wanted to go to Hangzhou. I still want a business class ticket. <endofhistory>",
    "output": "( flight ) class_cabin equal_to \" A business class \" , date equal_to \" Next Thursday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \"",
    "prediction": "( flight ) class_cabin equal_to \" business class \" , date equal_to \" next Thursday \" , departure equal_to \" Beijing \" , destination equal_to \" Hangzhou \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'd like to know the weather condition in Shenzhen for next Thursday. <endofhistory>",
    "output": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Thursday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Thursday \" <endofstate> <history> AGENT_ACTS: ( weather ) inform weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 20 degrees Celsius, minimum 14 degrees Celsius \" , wind equal_to \" east force 3-4 \" , uv_intensity equal_to \" weak \" USER: What about the temperature? <endofhistory>",
    "output": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" Next Thursday \"",
    "prediction": "The provided information does not include any slots that need to be normalized to a predefined set of values. The belief state for the weather domain can remain as is:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided information does not include any slots that need to be normalized to a predefined set of values. The belief state for the weather domain can remain as is: <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 20 degrees Celsius, minimum 14 degrees Celsius \" , wind equal_to \" east force 3-4 \" , uv_intensity equal_to \" weak \" AGENT_ACTS: ( weather ) inform temperature equal_to \" maximum 20 degrees Celsius, minimum 14 degrees Celsius \" USER: Sounds like nice weather. Will it be windy? <endofhistory>",
    "output": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" Next Thursday \"",
    "prediction": "The provided information about the wind does not correspond to any slot that needs to be normalized based on the given domains and slots. Therefore, no changes are required to the belief state. The belief state remains:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided information about the wind does not correspond to any slot that needs to be normalized based on the given domains and slots. Therefore, no changes are required to the belief state. The belief state remains: <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" maximum 20 degrees Celsius, minimum 14 degrees Celsius \" AGENT_ACTS: ( weather ) inform wind equal_to \" east force 3-4 \" USER: Will the UV intensity be very strong? <endofhistory>",
    "output": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Friday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Beijing \" , date equal_to \" next Friday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform wind equal_to \" east force 3-4 \" AGENT_ACTS: ( weather ) inform uv_intensity equal_to \" weak \" USER: Okay. No further questions. Thank you for your service. Goodbye! <endofhistory>",
    "output": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Friday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Will it rain in Beijing next Tuesday? <endofhistory>",
    "output": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \" <endofstate> <history> AGENT_ACTS: ( weather ) inform weather_condition equal_to \" sunny \" USER: Do I need sun protection? <endofhistory>",
    "output": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform weather_condition equal_to \" sunny \" AGENT_ACTS: ( weather ) inform uv_intensity equal_to \" strong \" USER: Will the temperature be high? <endofhistory>",
    "output": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform uv_intensity equal_to \" strong \" AGENT_ACTS: ( weather ) inform temperature equal_to \" The maximum will be 10 degrees Celsius, and the minimum will be -5 degrees Celsius \" USER: OK, will it be windy? <endofhistory>",
    "output": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" The maximum will be 10 degrees Celsius, and the minimum will be -5 degrees Celsius \" AGENT_ACTS: ( weather ) inform wind equal_to \" southwest force 2 \" USER: Thanks, bye. <endofhistory>",
    "output": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Beijing \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'd like to know the weather in Shenzhen for next Sunday. <endofhistory>",
    "output": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Sunday \" <endofstate> <history> AGENT_ACTS: ( weather ) inform date equal_to \" next Sunday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 22 degrees Celsius, minimum 16 degrees Celsius \" , wind equal_to \" northeast force 1 \" , uv_intensity equal_to \" weak \" USER: What about the temperature? <endofhistory>",
    "output": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Sunday \" , temperature equal_to \" maximum 22 degrees Celsius, minimum 16 degrees Celsius \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Sunday \" , temperature equal_to \" maximum 22 degrees Celsius, minimum 16 degrees Celsius \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Sunday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 22 degrees Celsius, minimum 16 degrees Celsius \" , wind equal_to \" northeast force 1 \" , uv_intensity equal_to \" weak \" AGENT_ACTS: ( weather ) inform temperature equal_to \" next Sunday in Shenzhen, the maximum temperature will be 22 degrees Celsius, and the minimum temperature will be 16 degrees Celsius \" USER: What about the weather in Wuhan? <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" next Sunday in Shenzhen, the maximum temperature will be 22 degrees Celsius, and the minimum temperature will be 16 degrees Celsius \" AGENT_ACTS: ( weather ) inform date equal_to \" next Sunday \" , weather_condition equal_to \" cloudy and later sunny \" , temperature equal_to \" maximum 19 degrees Celsius, minimum 8 degrees Celsius \" , wind equal_to \" southeast force 2 \" , uv_intensity equal_to \" moderate \" USER: And what about temperature? <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \"",
    "prediction": "The belief state provided does not include slots for \"city,\" \"date,\" or \"temperature,\" as these are not part of the normalized slots for the weather domain. The weather domain only includes \"uv intensity\" as a slot that can be normalized. Therefore, no changes are needed to the belief state based on the provided information."
  },
  {
    "instruction": "",
    "input": "DST: <state> The belief state provided does not include slots for \"city,\" \"date,\" or \"temperature,\" as these are not part of the normalized slots for the weather domain. The weather domain only includes \"uv intensity\" as a slot that can be normalized. Therefore, no changes are needed to the belief state based on the provided information. <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Sunday \" , weather_condition equal_to \" cloudy and later sunny \" , temperature equal_to \" maximum 19 degrees Celsius, minimum 8 degrees Celsius \" , wind equal_to \" southeast force 2 \" , uv_intensity equal_to \" moderate \" AGENT_ACTS: ( weather ) inform temperature equal_to \" next Sunday in Wuhan, the maximum temperature will be 19 degrees Celsius, and the minimum temperature will be 8 degrees Celsius \" USER: Okay. No further questions. Thank you for your service. Goodbye! <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \"",
    "prediction": "( general ) bye"
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: I'm going to Xiamen next week. Please help me check the weather. <endofhistory>",
    "output": "( weather ) city equal_to \" Xiamen \"",
    "prediction": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next week \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Xiamen \" , date equal_to \" next week \" <endofstate> <history> AGENT_ACTS: ( weather ) inform date equal_to \" next Monday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 8 degrees Celsius \" , wind equal_to \" northeast force 3-4 \" , uv_intensity equal_to \" very strong \" USER: I plan to go there next Tuesday. <endofhistory>",
    "output": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Monday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 8 degrees Celsius \" , wind equal_to \" northeast force 3-4 \" , uv_intensity equal_to \" very strong \" AGENT_ACTS: ( weather ) inform date equal_to \" next Tuesday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 7 degrees Celsius \" , wind equal_to \" northeast force 4-5 \" , uv_intensity equal_to \" very strong \" USER: How about the temperature? Will it be hot? <endofhistory>",
    "output": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 7 degrees Celsius \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 7 degrees Celsius \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Tuesday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 7 degrees Celsius \" , wind equal_to \" northeast force 4-5 \" , uv_intensity equal_to \" very strong \" AGENT_ACTS: ( weather ) inform temperature equal_to \" next Tuesday in Xiamen maximum 14 degrees Celsius, minimum 7 degrees Celsius \" USER: And what about the wind force? <endofhistory>",
    "output": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 7 degrees Celsius \" , wind equal_to \" northeast force 4-5 \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 7 degrees Celsius \" , wind equal_to \" northeast force 4-5 \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" next Tuesday in Xiamen maximum 14 degrees Celsius, minimum 7 degrees Celsius \" AGENT_ACTS: ( weather ) inform wind equal_to \" northeast force 4-5 on next Tuesday in Xiamen \" USER: What about the UV intensity? <endofhistory>",
    "output": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 7 degrees Celsius \" , wind equal_to \" northeast force 4-5 \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 7 degrees Celsius \" , wind equal_to \" northeast force 4-5 \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform wind equal_to \" northeast force 4-5 on next Tuesday in Xiamen \" AGENT_ACTS: ( weather ) inform uv_intensity equal_to \" very strong on next Tuesday in Xiamen \" USER: Got it, thank you, bye. <endofhistory>",
    "output": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 7 degrees Celsius \" , wind equal_to \" northeast force 4-5 \" , uv_intensity equal_to \" very strong \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: My buddies and I are going traveling. Please help me check the weather in Nanjing. <endofhistory>",
    "output": "( weather ) city equal_to \" Nanjing \"",
    "prediction": "The provided information does not include any slots that need to be normalized according to the given domains and possible values. The belief state remains unchanged:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided information does not include any slots that need to be normalized according to the given domains and possible values. The belief state remains unchanged: <endofstate> <history> AGENT_ACTS: ( weather ) inform city equal_to \" Nanjing \" , date equal_to \" next Monday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 9 degrees Celsius, minimum -2 degrees Celsius \" , wind equal_to \" northwest force 4-5 \" , uv_intensity equal_to \" strong \" USER: Next Thursday. <endofhistory>",
    "output": "( weather ) city equal_to \" Nanjing \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Nanjing \" , date equal_to \" next Thursday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Nanjing \" , date equal_to \" next Thursday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform city equal_to \" Nanjing \" , date equal_to \" next Monday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 9 degrees Celsius, minimum -2 degrees Celsius \" , wind equal_to \" northwest force 4-5 \" , uv_intensity equal_to \" strong \" AGENT_ACTS: ( weather ) inform date equal_to \" next Thursday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" southeast force 2 \" , uv_intensity equal_to \" moderate \" USER: How about the temperature? <endofhistory>",
    "output": "( weather ) city equal_to \" Nanjing \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Nanjing \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 5 degrees Celsius \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Nanjing \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 5 degrees Celsius \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Thursday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" southeast force 2 \" , uv_intensity equal_to \" moderate \" AGENT_ACTS: ( weather ) inform temperature equal_to \" next Thursday in Nanjing \" USER: Sounds all right. Please help me check the weather in Guangzhou next Thursday. I want to compare. <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Thursday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Thursday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" next Thursday in Nanjing \" AGENT_ACTS: ( weather ) inform date equal_to \" next Thursday \" , city equal_to \" Guangzhou \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 20 degrees Celsius, minimum 10 degrees Celsius \" , wind equal_to \" a breeze without continuous direction \" , uv_intensity equal_to \" weak \" USER: Cloudy, huh. How about the temperature? <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Thursday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 20 degrees Celsius, minimum 10 degrees Celsius \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Thursday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 20 degrees Celsius, minimum 10 degrees Celsius \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Thursday \" , city equal_to \" Guangzhou \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 20 degrees Celsius, minimum 10 degrees Celsius \" , wind equal_to \" a breeze without continuous direction \" , uv_intensity equal_to \" weak \" AGENT_ACTS: ( weather ) inform temperature equal_to \" next Thursday in Guangzhou maximum 20 degrees Celsius, minimum 10 degrees Celsius \" USER: Got it. Thanks, bye. <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Thursday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 20 degrees Celsius, minimum 10 degrees Celsius \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, my friend and I want to take a trip but we haven't decided which city to go to. Can you help us check what the weather will be like in Hangzhou next Thursday? <endofhistory>",
    "output": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" <endofstate> <history> AGENT_ACTS: ( weather ) inform date equal_to \" next Thursday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" east force 3-4 \" , uv_intensity equal_to \" strong \" USER: Good. How about the temperature? Do I need to bring sunscreen? <endofhistory>",
    "output": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , uv_intensity equal_to \" strong \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , uv_intensity equal_to \" strong \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Thursday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" east force 3-4 \" , uv_intensity equal_to \" strong \" AGENT_ACTS: ( weather ) inform temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , recommend action equal_to \" bring sunscreen \" due_to \" strong UV intensity \" USER: Got it. That's nice. I want to compare it to the temperature in Wuhan next Thursday. <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , uv_intensity equal_to \" strong \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , uv_intensity equal_to \" strong \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , recommend action equal_to \" bring sunscreen \" due_to \" strong UV intensity \"lsius \" , weather_condition equal_to \" sunny to cloudy \" , wind equal_to \" east force 1 \" AGENT_ACTS: ( weather ) inform temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , recommend action equal_to \" bring sunscreen \" due_to \" strong UV intensity \"lsius \" , weather_condition equal_to \" sunny to cloudy \" , wind equal_to \" east force 1 \" USER: No big difference. What about the weather? <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , uv_intensity equal_to \" strong \" , weather_condition equal_to \" sunny to cloudy \" , wind equal_to \" east force 1 \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , uv_intensity equal_to \" strong \" , weather_condition equal_to \" sunny to cloudy \" , wind equal_to \" east force 1 \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform city equal_to \" Wuhan \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 15 degrees Celsius, minimum 1 degree Celsius \" , weather_condition equal_to \" sunny to cloudy \" , wind equal_to \" east force 1 \" AGENT_ACTS: ( weather ) inform city equal_to \" Wuhan \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 15 degrees Celsius, minimum 1 degree Celsius \" , weather_condition equal_to \" sunny to cloudy \" , wind equal_to \" east force 1 \" USER: I think I know which city we will go to. Thank you, bye. <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , uv_intensity equal_to \" strong \" , weather_condition equal_to \" sunny to cloudy \" , wind equal_to \" east force 1 \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: What will the weather be like in Guangzhou next Sunday? <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Sunday \"",
    "prediction": "The belief state provided does not include slots for \"city\" or \"date\" within the weather domain. These slots are not part of the normalization task and therefore do not require any changes. The belief state remains unchanged:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The belief state provided does not include slots for \"city\" or \"date\" within the weather domain. These slots are not part of the normalization task and therefore do not require any changes. The belief state remains unchanged: <endofstate> <history> AGENT_ACTS: ( weather ) inform date equal_to \" next Sunday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" 14-24 degrees Celsius \" , wind equal_to \" a breeze without continuous direction \" , uv_intensity equal_to \" moderate \" USER: Will the temperature difference be big? <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Sunday \"",
    "prediction": "Understood. Since the belief state for the weather domain does not include \"city\" or \"date\" slots, and there are no other slots mentioned that require normalization, no changes are needed. The belief state for the weather domain remains as is."
  },
  {
    "instruction": "",
    "input": "DST: <state> Understood. Since the belief state for the weather domain does not include \"city\" or \"date\" slots, and there are no other slots mentioned that require normalization, no changes are needed. The belief state for the weather domain remains as is. <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Sunday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" 14-24 degrees Celsius \" , wind equal_to \" a breeze without continuous direction \" , uv_intensity equal_to \" moderate \" AGENT_ACTS: ( weather ) inform temperature equal_to \" next Sunday in Guangzhou, the maximum temperature will be 24 degrees Celsius, and the minimum temperature will be 14 degrees Celsius \" USER: How about the wind force? <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) date equal_to \" next Sunday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" next Sunday in Guangzhou, the maximum temperature will be 24 degrees Celsius, and the minimum temperature will be 14 degrees Celsius \" AGENT_ACTS: ( weather ) inform wind equal_to \" a breeze without continuous direction \" USER: Do I need sun protection? <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) date equal_to \" next Sunday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform wind equal_to \" a breeze without continuous direction \" AGENT_ACTS: ( weather ) inform uv_intensity equal_to \" moderate \" USER: Thank you very much, see you. <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'd like to know what the weather and temperature will be like in Nanjing next Tuesday. <endofhistory>",
    "output": "( weather ) city equal_to \" Nanjing \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Nanjing \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Nanjing \" , date equal_to \" next Tuesday \" <endofstate> <history> AGENT_ACTS: ( weather ) inform date equal_to \" next Tuesday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 9 degrees Celsius, minimum 0 degrees Celsius \" USER: Will it be windy? <endofhistory>",
    "output": "( weather ) city equal_to \" Nanjing \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Nanjing \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Nanjing \" , date equal_to \" next Tuesday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Tuesday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 9 degrees Celsius, minimum 0 degrees Celsius \" AGENT_ACTS: ( weather ) inform wind equal_to \" southern force 3-4 \" USER: Okay. And what about the weather in Shanghai next Wednesday? What will the temperature be? <endofhistory>",
    "output": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Wednesday \"",
    "prediction": "The belief state does not need to be normalized as it does not contain any slots that require normalization based on the provided information. The slots provided are already in an acceptable format."
  },
  {
    "instruction": "",
    "input": "DST: <state> The belief state does not need to be normalized as it does not contain any slots that require normalization based on the provided information. The slots provided are already in an acceptable format. <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform wind equal_to \" southern force 3-4 \" AGENT_ACTS: ( weather ) inform date equal_to \" next Wednesday \" , temperature equal_to \" maximum 11 degrees Celsius, minimum 5 degrees Celsius \" USER: Will the UV intensity be very strong in Shanghai? <endofhistory>",
    "output": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Wednesday \"",
    "prediction": "The belief state does not need to be normalized as it does not contain any slots that require normalization based on the provided information. The slots provided are already in an acceptable format."
  },
  {
    "instruction": "",
    "input": "DST: <state> The belief state does not need to be normalized as it does not contain any slots that require normalization based on the provided information. The slots provided are already in an acceptable format. <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Wednesday \" , temperature equal_to \" maximum 11 degrees Celsius, minimum 5 degrees Celsius \" AGENT_ACTS: ( weather ) inform uv_intensity equal_to \" weak \" USER: That's all I wanted to know. Thank you for your service. Goodbye! <endofhistory>",
    "output": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Wednesday \"",
    "prediction": "( general ) bye"
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: What will the temperature be in Xiamen next Wednesday? <endofhistory>",
    "output": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Wednesday \"",
    "prediction": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Wednesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Xiamen \" , date equal_to \" next Wednesday \" <endofstate> <history> AGENT_ACTS: ( weather ) inform temperature equal_to \" next Wednesday in Xiamen, the maximum temperature will be 17 degrees Celsius, and the minimum temperature will be 9 degrees Celsius \" USER: Will it rain? <endofhistory>",
    "output": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Wednesday \"",
    "prediction": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Wednesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Xiamen \" , date equal_to \" next Wednesday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" next Wednesday in Xiamen, the maximum temperature will be 17 degrees Celsius, and the minimum temperature will be 9 degrees Celsius \" AGENT_ACTS: ( weather ) inform weather_condition equal_to \" sunny \" USER: How about the wind force? <endofhistory>",
    "output": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Wednesday \"",
    "prediction": "( weather ) city equal_to \" Xiamen \" , date equal_to \" next Wednesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Xiamen \" , date equal_to \" next Wednesday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform weather_condition equal_to \" sunny \" AGENT_ACTS: ( weather ) inform wind equal_to \" east force 2 \" USER: Will it be sunny in Shanghai next Sunday? <endofhistory>",
    "output": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform wind equal_to \" east force 2 \" AGENT_ACTS: ( weather ) inform weather_condition equal_to \" sunny to cloudy \" USER: Will the temperature be high? <endofhistory>",
    "output": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform weather_condition equal_to \" sunny to cloudy \" AGENT_ACTS: ( weather ) inform temperature equal_to \" The maximum temperature will be 18 degrees Celsius, and the minimum temperature will be 11 degrees Celsius \" USER: Do I need sun protection? <endofhistory>",
    "output": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" The maximum temperature will be 18 degrees Celsius, and the minimum temperature will be 11 degrees Celsius \" AGENT_ACTS: ( weather ) inform uv_intensity equal_to \" strong \" USER: OK, thank you for your help, bye. <endofhistory>",
    "output": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: I'm going to Wuhan next week. Could you please help me check the weather in Wuhan next week? <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \"",
    "prediction": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next week \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Wuhan \" , date equal_to \" next week \" <endofstate> <history> AGENT_ACTS: ( weather ) inform date equal_to \" next Monday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 13 degrees Celsius, minimum -1 degree Celsius \" , wind equal_to \" east force 2 \" , uv_intensity equal_to \" moderate \" USER: I'm going there next Sunday. So, help me check next Sunday. <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Monday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 13 degrees Celsius, minimum -1 degree Celsius \" , wind equal_to \" east force 2 \" , uv_intensity equal_to \" moderate \" AGENT_ACTS: ( weather ) inform date equal_to \" next Sunday \" , weather_condition equal_to \" cloudy and later sunny \" , temperature equal_to \" maximum 19 degrees Celsius, minimum 8 degrees Celsius \" , wind equal_to \" southeast force 2 \" , uv_intensity equal_to \" moderate \" USER: How about the wind force? If it's windy, I'll wear more clothes. <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \"",
    "prediction": "The provided information does not include any slots that need to be normalized to a specific set of values as per the given domains and their possible values. The belief state remains unchanged:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided information does not include any slots that need to be normalized to a specific set of values as per the given domains and their possible values. The belief state remains unchanged: <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Sunday \" , weather_condition equal_to \" cloudy and later sunny \" , temperature equal_to \" maximum 19 degrees Celsius, minimum 8 degrees Celsius \" , wind equal_to \" southeast force 2 \" , uv_intensity equal_to \" moderate \" AGENT_ACTS: ( weather ) inform wind equal_to \" southeast force 2 \" USER: What about the UV intensity? I'm guessing it will be strong as it will be a sunny day, right? <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) uv_intensity equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) uv_intensity equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform wind equal_to \" southeast force 2 \" AGENT_ACTS: ( weather ) inform uv_intensity equal_to \" moderate \" USER: That's good. What will the temperature be? Will it be hot? <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) uv_intensity equal_to \" moderate \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) uv_intensity equal_to \" moderate \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform uv_intensity equal_to \" moderate \" AGENT_ACTS: ( weather ) inform temperature equal_to \" The maximum temperature will be 19 degrees Celsius, and the minimum temperature will be 8 degrees Celsius \" USER: That's great. Thank you and bye. <endofhistory>",
    "output": "( weather ) city equal_to \" Wuhan \" , date equal_to \" next Sunday \"",
    "prediction": "( general ) bye"
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going to Hangzhou on business next week, but I haven't set my departure date. I will decide when I know what the weather will be like. Could you please help me check the wind force there next Tuesday? Will it be windy? <endofhistory>",
    "output": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Tuesday \" <endofstate> <history> AGENT_ACTS: ( weather ) inform wind equal_to \" north force 1 on next Tuesday in Hangzhou \" USER: That's good. What will the weather be like in Hangzhou? <endofhistory>",
    "output": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Tuesday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform wind equal_to \" north force 1 on next Tuesday in Hangzhou \" AGENT_ACTS: ( weather ) inform date equal_to \" next Tuesday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 11 degrees Celsius, minimum 0 degrees Celsius \" , uv_intensity equal_to \" strong \" USER: Sunny, great. But the UV intensity will be very strong then, right? <endofhistory>",
    "output": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Tuesday \" , uv_intensity equal_to \" strong \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Tuesday \" , uv_intensity equal_to \" strong \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Tuesday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 11 degrees Celsius, minimum 0 degrees Celsius \" , uv_intensity equal_to \" strong \" AGENT_ACTS: ( weather ) confirm uv_intensity equal_to \" strong \" USER: Then I'll change the date. Please help me check the weather for next Thursday. <endofhistory>",
    "output": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) confirm uv_intensity equal_to \" strong \" AGENT_ACTS: ( weather ) inform date equal_to \" next Thursday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" east force 3-4 \" USER: Cloudy is OK. How about the temperature? <endofhistory>",
    "output": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" east force 3-4 \" , uv_intensity equal_to \" strong \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" east force 3-4 \" , uv_intensity equal_to \" strong \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Thursday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" east force 3-4 \" AGENT_ACTS: ( weather ) inform temperature equal_to \" next Thursday in Hangzhou \" USER: Got it, that's all I wanted to know. Thank you, goodbye. <endofhistory>",
    "output": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" Next Thursday \"",
    "prediction": "( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Thursday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 16 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" east force 3-4 \" , uv_intensity equal_to \" strong \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'd like to know the weather for the coming days. Could you please help me check what the weather will be like in Guangzhou next Tuesday? <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Tuesday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Tuesday \" <endofstate> <history> AGENT_ACTS: ( weather ) inform date equal_to \" next Tuesday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 18 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" a breeze without continuous direction \" , uv_intensity equal_to \" very strong \" USER: Nice. How about the temperature? <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 18 degrees Celsius, minimum 5 degrees Celsius \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 18 degrees Celsius, minimum 5 degrees Celsius \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Tuesday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 18 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" a breeze without continuous direction \" , uv_intensity equal_to \" very strong \" AGENT_ACTS: ( weather ) inform temperature equal_to \" next Tuesday in Guangzhou, the maximum temperature will be 18 degrees Celsius, and the minimum temperature will be 5 degrees Celsius. \" USER: It's good. How about the wind force? <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Tuesday \"",
    "prediction": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 18 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" a breeze without continuous direction \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Tuesday \" , temperature equal_to \" maximum 18 degrees Celsius, minimum 5 degrees Celsius \" , wind equal_to \" a breeze without continuous direction \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" next Tuesday in Guangzhou, the maximum temperature will be 18 degrees Celsius, and the minimum temperature will be 5 degrees Celsius. \" AGENT_ACTS: ( weather ) inform wind equal_to \" a breeze without continuous direction \" USER: OK, got it. And please help me check the weather in Shanghai for next Saturday. I might go there. <endofhistory>",
    "output": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Saturday \"",
    "prediction": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Saturday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Shanghai \" , date equal_to \" next Saturday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform wind equal_to \" a breeze without continuous direction \" AGENT_ACTS: ( weather ) inform date equal_to \" next Saturday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 17 degrees Celsius, minimum 9 degrees Celsius \" , wind equal_to \" south force 1 \" , uv_intensity equal_to \" strong \" USER: Really lucky. How about the temperature in Shanghai? <endofhistory>",
    "output": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Saturday \"",
    "prediction": "The provided information does not require normalization as it does not contain any slots that need to be normalized to predefined values. The belief state can remain as is:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided information does not require normalization as it does not contain any slots that need to be normalized to predefined values. The belief state can remain as is: <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Saturday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 17 degrees Celsius, minimum 9 degrees Celsius \" , wind equal_to \" south force 1 \" , uv_intensity equal_to \" strong \" AGENT_ACTS: ( weather ) inform city equal_to \" Guangzhou \" , temperature equal_to \" The maximum temperature will be 23 degrees Celsius, and the minimum temperature will be 14 degrees Celsius \" USER: That's great. What about the UV intensity? Will it be strong? <endofhistory>",
    "output": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Saturday \"",
    "prediction": "( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Saturday \" , uv_intensity equal_to \" strong \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Guangzhou \" , date equal_to \" next Saturday \" , uv_intensity equal_to \" strong \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform city equal_to \" Guangzhou \" , temperature equal_to \" The maximum temperature will be 23 degrees Celsius, and the minimum temperature will be 14 degrees Celsius \" AGENT_ACTS: ( weather ) inform uv_intensity equal_to \" strong \" USER: Well, that's all I wanted to know. Thank you for your help, goodbye. <endofhistory>",
    "output": "( weather ) city equal_to \" Shanghai \" , date equal_to \" next Saturday \"",
    "prediction": "( general ) bye"
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I'm going to travel from Hangzhou to Shenzhen. Please help me check if there is any bullet train leaving next Monday morning. <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Monday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \"",
    "prediction": "The provided information does not include any slots that need to be normalized to a specific value from a list of possible values. The information about the train classification, date, departure, and destination is already in a clear format, but please note that \"classification\" is not a slot that has been defined in the initial instructions. If \"classification\" refers to a slot like \"seat type,\" it would need to be one of the specified types such as \"first class,\" \"second class,\" \"sleeper in first class,\" \"sleeper in second class,\" or \"sleeper.\" However, since \"bullet train\" is not a seat type, it cannot be normalized to one of the given options without further context. If \"classification\" is not meant to be normalized, then the belief state remains unchanged:"
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided information does not include any slots that need to be normalized to a specific value from a list of possible values. The information about the train classification, date, departure, and destination is already in a clear format, but please note that \"classification\" is not a slot that has been defined in the initial instructions. If \"classification\" refers to a slot like \"seat type,\" it would need to be one of the specified types such as \"first class,\" \"second class,\" \"sleeper in first class,\" \"sleeper in second class,\" or \"sleeper.\" However, since \"bullet train\" is not a seat type, it cannot be normalized to one of the given options without further context. If \"classification\" is not meant to be normalized, then the belief state remains unchanged: <endofstate> <history> AGENT_ACTS: ( train ) inform train_number equal_to \" D3111 from Hangzhoudong to Shenzhenbei \" USER: I'd like to travel first class. <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Monday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \" , seat_type equal_to \" first class \"",
    "prediction": "( train ) seat_type equal_to \" first class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" first class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" D3111 from Hangzhoudong to Shenzhenbei \" AGENT_ACTS: ( train ) inform classification equal_to \" bullet train \" , departure_time equal_to \" 07:33 that day \" , arrival_time equal_to \" 18:15 that day \" , duration equal_to \" 10 hours and 42 minutes \" , ticket_price equal_to \" 867.0 yuan \" USER: When does it depart? <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Monday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \" , seat_type equal_to \" first class \"",
    "prediction": "( train ) seat_type equal_to \" first class \" , classification equal_to \" bullet train \" , departure_time equal_to \" 07:33 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" first class \" , classification equal_to \" bullet train \" , departure_time equal_to \" 07:33 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform classification equal_to \" bullet train \" , departure_time equal_to \" 07:33 that day \" , arrival_time equal_to \" 18:15 that day \" , duration equal_to \" 10 hours and 42 minutes \" , ticket_price equal_to \" 867.0 yuan \" AGENT_ACTS: ( train ) inform departure_time equal_to \" 07:33 that day \" USER: How much is a ticket? <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Monday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \" , seat_type equal_to \" first class \"",
    "prediction": "( train ) seat_type equal_to \" first class \" , classification equal_to \" bullet train \" , departure_time equal_to \" 07:33 that day \" , ticket_price equal_to \" 867.0 yuan \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" first class \" , classification equal_to \" bullet train \" , departure_time equal_to \" 07:33 that day \" , ticket_price equal_to \" 867.0 yuan \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform departure_time equal_to \" 07:33 that day \" AGENT_ACTS: ( train ) inform ticket_price equal_to \" 867.0 yuan \" USER: Can you tell me what the temperature will be in Shenzhen next Monday? <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Monday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \" , seat_type equal_to \" first class \" ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Monday \"",
    "prediction": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Monday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Monday \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform ticket_price equal_to \" 867.0 yuan \" AGENT_ACTS: ( weather ) inform temperature equal_to \" The maximum temperature will be 17 degrees Celsius, and the minimum temperature will be 7 degrees Celsius \" USER: How about the weather? <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Monday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \" , seat_type equal_to \" first class \" ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Monday \"",
    "prediction": "( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Monday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Monday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform temperature equal_to \" The maximum temperature will be 17 degrees Celsius, and the minimum temperature will be 7 degrees Celsius \" AGENT_ACTS: ( weather ) inform weather_condition equal_to \" sunny \" , uv_intensity equal_to \" very strong \" USER: Is there any bullet train leaving next Wednesday morning? <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Wednesday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \" ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Monday \"",
    "prediction": "( train ) date equal_to \" next Wednesday morning \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) date equal_to \" next Wednesday morning \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform weather_condition equal_to \" sunny \" , uv_intensity equal_to \" very strong \" AGENT_ACTS: ( train ) inform train_number equal_to \" D3111 from Hangzhoudong to Shenzhenbei \" , departure_time equal_to \" 07:33 that day \" USER: When does it depart? <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Wednesday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \" ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Monday \"",
    "prediction": "( train ) date equal_to \" next Wednesday morning \" , departure_time equal_to \" 07:33 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) date equal_to \" next Wednesday morning \" , departure_time equal_to \" 07:33 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" D3111 from Hangzhoudong to Shenzhenbei \" , departure_time equal_to \" 07:33 that day \" AGENT_ACTS: ( train ) inform departure_time equal_to \" 07:33 that day \" USER: What will the weather be like in Shenzhen next Wednesday? <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Wednesday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \" ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Wednesday \"",
    "prediction": "( train ) date equal_to \" next Wednesday morning \" , departure_time equal_to \" 07:33 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) date equal_to \" next Wednesday morning \" , departure_time equal_to \" 07:33 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform departure_time equal_to \" 07:33 that day \" AGENT_ACTS: ( weather ) inform city equal_to \" Shenzhen \" , date equal_to \" next Wednesday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 18 degrees Celsius, minimum 11 degrees Celsius \" , wind equal_to \" east force 3-4 \" , uv_intensity equal_to \" very strong \" USER: Thank you for your help. <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Wednesday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \" ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Wednesday \"",
    "prediction": "( train ) date equal_to \" next Wednesday morning \" , departure_time equal_to \" 07:33 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) date equal_to \" next Wednesday morning \" , departure_time equal_to \" 07:33 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform city equal_to \" Shenzhen \" , date equal_to \" next Wednesday \" , weather_condition equal_to \" sunny to cloudy \" , temperature equal_to \" maximum 18 degrees Celsius, minimum 11 degrees Celsius \" , wind equal_to \" east force 3-4 \" , uv_intensity equal_to \" very strong \" AGENT_ACTS: ( general ) you_are_welcome USER: Goodbye. <endofhistory>",
    "output": "( train ) classification equal_to \" bullet train \" , date equal_to \" next Wednesday morning \" , departure equal_to \" Hangzhou \" , destination equal_to \" Shenzhen \" ( weather ) city equal_to \" Shenzhen \" , date equal_to \" next Wednesday \"",
    "prediction": "( train ) date equal_to \" next Wednesday morning \" , departure_time equal_to \" 07:33 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I will take annual leave next week and want to travel from Xiamen to Hangzhou with my family. Can you recommend a high-speed train leaving next Monday morning? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday morning \" , departure equal_to \" Xiamen \" , destination equal_to \" Hangzhou \"",
    "prediction": "The provided information does not include any slots that need to be normalized to a specific value from a list of possible values. The information given is already in a clear format, but please note that the domain 'train' does not have a 'classification' slot in the provided list. If 'classification' refers to the type of train, it might not need normalization in this context. However, if it refers to 'seat type', then it would need to be one of the specified types such as \"first class\", \"second class\", \"sleeper in first class\", \"sleeper in second class\", or \"sleeper\". Since 'high-speed train' is not a seat type, it would not be normalized in this case. The rest of the information seems to be additional details about the train journey."
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided information does not include any slots that need to be normalized to a specific value from a list of possible values. The information given is already in a clear format, but please note that the domain 'train' does not have a 'classification' slot in the provided list. If 'classification' refers to the type of train, it might not need normalization in this context. However, if it refers to 'seat type', then it would need to be one of the specified types such as \"first class\", \"second class\", \"sleeper in first class\", \"sleeper in second class\", or \"sleeper\". Since 'high-speed train' is not a seat type, it would not be normalized in this case. The rest of the information seems to be additional details about the train journey. <endofstate> <history> AGENT_ACTS: ( train ) recommend train_number equal_to \" G1652, from Xiamen to Hangzhoudong \" USER: How much is a second-class seat? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday morning \" , departure equal_to \" Xiamen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" second class ticket \"",
    "prediction": "( train ) seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) recommend train_number equal_to \" G1652, from Xiamen to Hangzhoudong \" AGENT_ACTS: ( train ) inform ticket_price equal_to \" 403.0 yuan \" USER: OK. What will the weather be like in Hangzhou next Monday? What will the temperature be? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Monday morning \" , departure equal_to \" Xiamen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" second class ticket \" ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Monday \"",
    "prediction": "( train ) seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform ticket_price equal_to \" 403.0 yuan \" AGENT_ACTS: ( weather ) inform city equal_to \" Hangzhou \" , date equal_to \" next Monday \" , temperature equal_to \" The maximum temperature will be 11 degrees Celsius, and the minimum temperature will be -1 degree Celsius \" USER: That's good. Just a little cold. Is there a high-speed train leaving next Wednesday afternoon? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Xiamen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" second class ticket \" ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Monday \"",
    "prediction": "( train ) seat_type equal_to \" second class \" , classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" second class \" , classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform city equal_to \" Hangzhou \" , date equal_to \" next Monday \" , temperature equal_to \" The maximum temperature will be 11 degrees Celsius, and the minimum temperature will be -1 degree Celsius \" AGENT_ACTS: ( train ) inform train_number equal_to \" G1656 from Xiamenbei to Hangzhoudong \" , departure_time equal_to \" 14:10 that day \" , arrival_time equal_to \" 19:40 that day \" USER: What time does the train arrive in Hangzhou? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Xiamen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" second class ticket \" ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Monday \"",
    "prediction": "( train ) seat_type equal_to \" second class \" , classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , arrival_time equal_to \" 19:40 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" second class \" , classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , arrival_time equal_to \" 19:40 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" G1656 from Xiamenbei to Hangzhoudong \" , departure_time equal_to \" 14:10 that day \" , arrival_time equal_to \" 19:40 that day \" AGENT_ACTS: ( train ) inform arrival_time equal_to \" 19:40 that day \" USER: OK, what will the weather be like in Hangzhou next Wednesday? Will it be warmer? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Xiamen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" second class ticket \" ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Wednesday \"",
    "prediction": "( train ) seat_type equal_to \" second class \" , classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , arrival_time equal_to \" 19:40 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) seat_type equal_to \" second class \" , classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , arrival_time equal_to \" 19:40 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform arrival_time equal_to \" 19:40 that day \" AGENT_ACTS: ( weather ) inform city equal_to \" Hangzhou \" , date equal_to \" next Wednesday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 14 degrees Celsius, minimum 1 degree Celsius \" , wind equal_to \" southeast force 1 \" , uv_intensity equal_to \" weak \" USER: OK, thank you so much. That's all I wanted to know, goodbye. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Xiamen \" , destination equal_to \" Hangzhou \" , seat_type equal_to \" second class ticket \" ( weather ) city equal_to \" Hangzhou \" , date equal_to \" next Wednesday \"",
    "prediction": "( train ) seat_type equal_to \" second class \" , classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , arrival_time equal_to \" 19:40 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: Hello, I want to travel to Beijing next week. Please help me check if there is any high-speed train from Chengdu to Beijing next Wednesday afternoon. I'd like to travel second class. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \"",
    "prediction": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS: ( train ) inform train_number equal_to \" G90 from Chengdudong to Beijingxi \" USER: OK, what time does it arrive in Beijing? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \"",
    "prediction": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" G90 from Chengdudong to Beijingxi \" AGENT_ACTS: ( train ) inform arrival_time equal_to \" 22:52 that day \" USER: That's a little late indeed. What about the departure time? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \"",
    "prediction": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform arrival_time equal_to \" 22:52 that day \" AGENT_ACTS: ( train ) inform departure_time equal_to \" 15:02 that day \" USER: The departure time is OK. Please help me check the ticket price and then I'll make a decision. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \"",
    "prediction": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" , departure_time equal_to \" 15:02 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" , departure_time equal_to \" 15:02 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform departure_time equal_to \" 15:02 that day \" AGENT_ACTS: ( train ) inform ticket_price equal_to \" 778.5 yuan \" USER: What will the temperature be in Beijing next Wednesday? I need to know in advance so I'll know how much clothes I should bring. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" ( weather ) city equal_to \" Beijing \" , date equal_to \" next Wednesday \"",
    "prediction": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" , departure_time equal_to \" 15:02 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" , departure_time equal_to \" 15:02 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform ticket_price equal_to \" 778.5 yuan \" AGENT_ACTS: ( weather ) inform city equal_to \" Beijing \" , date equal_to \" next Wednesday \" , temperature equal_to \" The maximum temperature will be 8 degrees Celsius, and the minimum temperature will be −5 degrees Celsius \" USER: It's much colder than Chengdu. What will the weather be like? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" ( weather ) city equal_to \" Beijing \" , date equal_to \" next Wednesday \"",
    "prediction": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" , departure_time equal_to \" 15:02 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) classification equal_to \" high-speed train \" , date equal_to \" next Wednesday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" , seat_type equal_to \" second class \" , departure_time equal_to \" 15:02 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform city equal_to \" Beijing \" , date equal_to \" next Wednesday \" , temperature equal_to \" The maximum temperature will be 8 degrees Celsius, and the minimum temperature will be −5 degrees Celsius \" AGENT_ACTS: ( weather ) inform weather_condition equal_to \" sunny to cloudy \" , wind equal_to \" southeast force 2 \" USER: Got it. Please help me check if there is any high-speed train from Chengdu to Beijing next Saturday afternoon. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" ( weather ) city equal_to \" Beijing \" , date equal_to \" next Wednesday \"",
    "prediction": "The provided information does not include any slots that need to be normalized to a specific value from a given list. The slots given (classification, date, departure, destination) do not have specified possible values to normalize to in the context provided. Therefore, no changes are made to the belief state."
  },
  {
    "instruction": "",
    "input": "DST: <state> The provided information does not include any slots that need to be normalized to a specific value from a given list. The slots given (classification, date, departure, destination) do not have specified possible values to normalize to in the context provided. Therefore, no changes are made to the belief state. <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform weather_condition equal_to \" sunny to cloudy \" , wind equal_to \" southeast force 2 \" AGENT_ACTS: ( train ) inform train_number equal_to \" G90, from Chengdudong to Beijingxi \" USER: Will it arrive in Beijing at the same time? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" ( weather ) city equal_to \" Beijing \" , date equal_to \" next Wednesday \"",
    "prediction": "I apologize for any confusion. It seems there was a misunderstanding. The belief state you provided for the PC domain is already correctly formatted according to the possible values for the pricerange slot. Here is the normalized belief state:"
  },
  {
    "instruction": "",
    "input": "DST: <state> I apologize for any confusion. It seems there was a misunderstanding. The belief state you provided for the PC domain is already correctly formatted according to the possible values for the pricerange slot. Here is the normalized belief state: <endofstate> <history> AGENT_ACTS_PREV: ( train ) inform train_number equal_to \" G90, from Chengdudong to Beijingxi \" AGENT_ACTS: ( train ) confirm arrival_time equal_to \" 22:52 that day \" USER: And the departure time is the same too? <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" ( weather ) city equal_to \" Beijing \" , date equal_to \" next Wednesday \"",
    "prediction": "( train ) train_number equal_to \" G90, from Chengdudong to Beijingxi \" , arrival_time equal_to \" 22:52 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) train_number equal_to \" G90, from Chengdudong to Beijingxi \" , arrival_time equal_to \" 22:52 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) confirm arrival_time equal_to \" 22:52 that day \" AGENT_ACTS: ( train ) confirm departure_time equal_to \" 15:02 that day \" USER: Please help me check the weather in Beijing next Saturday. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" ( weather ) city equal_to \" Beijing \" , date equal_to \" next Saturday \"",
    "prediction": "( train ) train_number equal_to \" G90, from Chengdudong to Beijingxi \" , arrival_time equal_to \" 22:52 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( train ) train_number equal_to \" G90, from Chengdudong to Beijingxi \" , arrival_time equal_to \" 22:52 that day \" <endofstate> <history> AGENT_ACTS_PREV: ( train ) confirm departure_time equal_to \" 15:02 that day \" AGENT_ACTS: ( weather ) inform city equal_to \" Beijing \" , date equal_to \" next Saturday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 9 degrees Celsius and minimum −3 degrees Celsius \" , wind equal_to \" north force 3 \" , uv_intensity equal_to \" strong \" USER: OK, that's all I wanted to know. Thank you so much for your patience, bye. <endofhistory>",
    "output": "( train ) classification equal_to \" high-speed train \" , date equal_to \" next Saturday afternoon \" , departure equal_to \" Chengdu \" , destination equal_to \" Beijing \" ( weather ) city equal_to \" Beijing \" , date equal_to \" next Saturday \"",
    "prediction": "( train ) train_number equal_to \" G90, from Chengdudong to Beijingxi \" , arrival_time equal_to \" 22:52 that day \""
  },
  {
    "instruction": "",
    "input": "DST: <state> null <endofstate> <history> USER: My company is sending me on a business trip to Nanjing next week. Can you help me check the weather there? <endofhistory>",
    "output": "( weather ) city equal_to \" Nanjing \"",
    "prediction": "( weather ) city equal_to \" Nanjing \" , date equal_to \" next week \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Nanjing \" , date equal_to \" next week \" <endofstate> <history> AGENT_ACTS: ( weather ) inform date equal_to \" next Monday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 9 degrees Celsius, minimum -2 degrees Celsius \" , wind equal_to \" northwest force 4-5 \" USER: Next Sunday. <endofhistory>",
    "output": "( weather ) city equal_to \" Nanjing \" , date equal_to \" next Sunday \"",
    "prediction": "( weather ) city equal_to \" Nanjing \" , date equal_to \" next Sunday \""
  },
  {
    "instruction": "",
    "input": "DST: <state> ( weather ) city equal_to \" Nanjing \" , date equal_to \" next Sunday \" <endofstate> <history> AGENT_ACTS_PREV: ( weather ) inform date equal_to \" next Monday \" , weather_condition equal_to \" sunny \" , temperature equal_to \" maximum 9 degrees Celsius, minimum -2 degrees Celsius \" , wind equal_to \" northwest force 4-5 \" AGENT_ACTS: ( weather ) inform date equal_to \" next Sunday \" , weather_condition equal_to \" cloudy \" , temperature equal_to \" maximum 18 degrees Celsius, minimum 7 degrees Celsius \" , wind equal_to \" southeast force 2 \" USER: How about the temperature? Will it be cold? <endofhistory>",
    "output": "( weather ) city equal_to \" Nanjing \" , date equal_to \" next Sunday \"",
    "prediction": "The belief state provided does not include slots for \"city,\" \"date,\" or \"temperature,\" as these are not part of the normalized slots for the weather domain. The weather domain only includes a slot for \"uv intensity.\" Therefore, no normalization is needed based on the provided information. If there were relevant slots to normalize, they would be adjusted accordingly."
  }
]